ARM GAS  /tmp/cc1FHjKq.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"menu.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/menu.c"
  18              		.section	.text.serveMenuFunc,"ax",%progbits
  19              		.align	1
  20              		.global	serveMenuFunc
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	serveMenuFunc:
  26              	.LVL0:
  27              	.LFB67:
   1:Core/Src/menu.c **** #include "menu.h"
   2:Core/Src/menu.c **** 
   3:Core/Src/menu.c **** char menu_titles[MENUS_NUM+1][MAX_TEXT_S];
   4:Core/Src/menu.c **** char menu_cont[MENUS_NUM+1][MAX_TEXT_S];
   5:Core/Src/menu.c **** 
   6:Core/Src/menu.c **** uint8_t initMenu(struct menu_status *menu_h){
   7:Core/Src/menu.c ****   ST7735_Init();
   8:Core/Src/menu.c ****   ST7735_FillScreen(ST7735_GRAY);
   9:Core/Src/menu.c ****   menu_h->curr_screen = Home_screen;
  10:Core/Src/menu.c ****   menu_h->update_needed = true;
  11:Core/Src/menu.c ****   menu_h->alarm_count = 0;
  12:Core/Src/menu.c **** 
  13:Core/Src/menu.c ****   setMenuTexts(menu_titles[Home_screen],"Plotter ON");
  14:Core/Src/menu.c ****   setMenuTexts(menu_titles[Manual_move],"Init. man move");
  15:Core/Src/menu.c ****   setMenuTexts(menu_titles[Zero_pos],"Set Zero Pos.");
  16:Core/Src/menu.c ****   setMenuTexts(menu_titles[Grid_setup_auto],"Auto. Setup");
  17:Core/Src/menu.c ****   setMenuTexts(menu_titles[Grid_setup_manual],"Man. Setup");
  18:Core/Src/menu.c ****   setMenuTexts(menu_titles[Grid_setup_zero],"Set (0,0)-pos");
  19:Core/Src/menu.c ****   setMenuTexts(menu_titles[Grid_setup_move],"Set next-pos");
  20:Core/Src/menu.c ****   setMenuTexts(menu_titles[Success_screen],"SUCCESS!");
  21:Core/Src/menu.c ****   setMenuTexts(menu_titles[Fail_screen],"FAILED!");
  22:Core/Src/menu.c ****   setMenuTexts(menu_titles[Next_batch],"Run Next?");
  23:Core/Src/menu.c ****   setMenuTexts(menu_titles[MENUS_NUM],"NEVER REACHED");
  24:Core/Src/menu.c **** 
  25:Core/Src/menu.c ****   setMenuTexts(menu_cont[Home_screen],"");
  26:Core/Src/menu.c ****   setMenuTexts(menu_cont[Manual_move],"Manually move plotter using joypad");
  27:Core/Src/menu.c ****   setMenuTexts(menu_cont[Zero_pos],"Set current possition as origin (0,0)");
  28:Core/Src/menu.c ****   setMenuTexts(menu_cont[Grid_setup_auto],"Automatically setup the flash pin positions");
  29:Core/Src/menu.c ****   setMenuTexts(menu_cont[Grid_setup_manual],"Manually setup the flash pin positions");
  30:Core/Src/menu.c ****   setMenuTexts(menu_cont[Grid_setup_zero],"Set start position");
  31:Core/Src/menu.c ****   setMenuTexts(menu_cont[Grid_setup_move],"Set next position");
ARM GAS  /tmp/cc1FHjKq.s 			page 2


  32:Core/Src/menu.c ****   setMenuTexts(menu_cont[Success_screen],"");
  33:Core/Src/menu.c ****   setMenuTexts(menu_cont[Fail_screen],"");
  34:Core/Src/menu.c ****   setMenuTexts(menu_cont[Next_batch],"Press SELECT when next batch loaded.\nPress CANCEL to stop fl
  35:Core/Src/menu.c **** 
  36:Core/Src/menu.c ****   return RETURN_OK;
  37:Core/Src/menu.c **** }
  38:Core/Src/menu.c **** 
  39:Core/Src/menu.c **** uint8_t serveMenuScreen(struct menu_status *menu_h, uint8_t *joy_vals){
  40:Core/Src/menu.c **** 
  41:Core/Src/menu.c ****   //joypad to the right so switch to next screen
  42:Core/Src/menu.c ****   if(joy_vals[1] > 220){
  43:Core/Src/menu.c ****     if(menu_h->curr_screen < (MENUS_NUM-1))menu_h->curr_screen = (menu_h->curr_screen + 1);
  44:Core/Src/menu.c ****     else menu_h->curr_screen = Manual_move;
  45:Core/Src/menu.c ****     menu_h->update_needed = true;
  46:Core/Src/menu.c ****   } 
  47:Core/Src/menu.c **** 
  48:Core/Src/menu.c ****   //joypad to the left so switch to previous screen
  49:Core/Src/menu.c ****   else if(joy_vals[1] < 30){
  50:Core/Src/menu.c ****     if(menu_h->curr_screen > Manual_move)menu_h->curr_screen = (menu_h->curr_screen - 1);
  51:Core/Src/menu.c ****     else menu_h->curr_screen = Grid_setup_manual;
  52:Core/Src/menu.c ****     menu_h->update_needed = true;
  53:Core/Src/menu.c ****   } 
  54:Core/Src/menu.c **** 
  55:Core/Src/menu.c ****   else;
  56:Core/Src/menu.c **** 
  57:Core/Src/menu.c ****   if(menu_h->update_needed == true){
  58:Core/Src/menu.c ****     drawMenuScreen(menu_h->curr_screen);
  59:Core/Src/menu.c ****     menu_h->update_needed = false;
  60:Core/Src/menu.c ****     if(menu_h->curr_screen == Home_screen){
  61:Core/Src/menu.c ****       menu_h->curr_screen += 1;
  62:Core/Src/menu.c ****       menu_h->update_needed = true; 
  63:Core/Src/menu.c ****     }
  64:Core/Src/menu.c ****     HAL_Delay(500);
  65:Core/Src/menu.c ****   }
  66:Core/Src/menu.c **** 
  67:Core/Src/menu.c ****   return RETURN_OK;
  68:Core/Src/menu.c **** }
  69:Core/Src/menu.c **** 
  70:Core/Src/menu.c **** uint8_t serveMenuFunc(struct menu_status *menu_h, uint8_t *joy_vals, struct setup_data *setup_data_
  28              		.loc 1 70 102 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  71:Core/Src/menu.c **** 
  72:Core/Src/menu.c ****   return RETURN_OK;
  33              		.loc 1 72 3 view .LVU1
  73:Core/Src/menu.c **** }
  34              		.loc 1 73 1 is_stmt 0 view .LVU2
  35 0000 0020     		movs	r0, #0
  36              	.LVL1:
  37              		.loc 1 73 1 view .LVU3
  38 0002 7047     		bx	lr
  39              		.cfi_endproc
  40              	.LFE67:
  42              		.section	.text.drawMenuScreen,"ax",%progbits
  43              		.align	1
ARM GAS  /tmp/cc1FHjKq.s 			page 3


  44              		.global	drawMenuScreen
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  49              	drawMenuScreen:
  50              	.LVL2:
  51              	.LFB68:
  74:Core/Src/menu.c **** 
  75:Core/Src/menu.c **** uint8_t drawMenuScreen(enum screens req_screen){
  52              		.loc 1 75 48 is_stmt 1 view -0
  53              		.cfi_startproc
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		.loc 1 75 48 is_stmt 0 view .LVU5
  57 0000 70B5     		push	{r4, r5, r6, lr}
  58              		.cfi_def_cfa_offset 16
  59              		.cfi_offset 4, -16
  60              		.cfi_offset 5, -12
  61              		.cfi_offset 6, -8
  62              		.cfi_offset 14, -4
  63 0002 84B0     		sub	sp, sp, #16
  64              		.cfi_def_cfa_offset 32
  65 0004 0446     		mov	r4, r0
  76:Core/Src/menu.c ****   //grey background
  77:Core/Src/menu.c ****   ST7735_FillScreen(ST7735_GRAY);
  66              		.loc 1 77 3 is_stmt 1 view .LVU6
  67 0006 4AF21450 		movw	r0, #42260
  68              	.LVL3:
  69              		.loc 1 77 3 is_stmt 0 view .LVU7
  70 000a FFF7FEFF 		bl	ST7735_FillScreen
  71              	.LVL4:
  78:Core/Src/menu.c ****   ST7735_WriteJustifyString(10, menu_titles[req_screen], Font_11x18, ST7735_RED,ST7735_GRAY,JUST_CE
  72              		.loc 1 78 3 is_stmt 1 view .LVU8
  73              		.loc 1 78 44 is_stmt 0 view .LVU9
  74 000e 6423     		movs	r3, #100
  75 0010 03FB04F4 		mul	r4, r3, r4
  76              		.loc 1 78 3 view .LVU10
  77 0014 0E4B     		ldr	r3, .L4
  78 0016 0222     		movs	r2, #2
  79 0018 0292     		str	r2, [sp, #8]
  80 001a 4AF21456 		movw	r6, #42260
  81 001e 0196     		str	r6, [sp, #4]
  82 0020 4FF47842 		mov	r2, #63488
  83 0024 0092     		str	r2, [sp]
  84 0026 0CCB     		ldm	r3, {r2, r3}
  85 0028 0A49     		ldr	r1, .L4+4
  86 002a 2144     		add	r1, r1, r4
  87 002c 0A20     		movs	r0, #10
  88 002e FFF7FEFF 		bl	ST7735_WriteJustifyString
  89              	.LVL5:
  79:Core/Src/menu.c ****   ST7735_WriteJustifyString(50, menu_cont[req_screen], Font_7x10, ST7735_BLUE,ST7735_GRAY,JUST_LEFT
  90              		.loc 1 79 3 is_stmt 1 view .LVU11
  91 0032 094B     		ldr	r3, .L4+8
  92 0034 0025     		movs	r5, #0
  93 0036 0295     		str	r5, [sp, #8]
  94 0038 0196     		str	r6, [sp, #4]
  95 003a 1F22     		movs	r2, #31
ARM GAS  /tmp/cc1FHjKq.s 			page 4


  96 003c 0092     		str	r2, [sp]
  97 003e 0CCB     		ldm	r3, {r2, r3}
  98 0040 0649     		ldr	r1, .L4+12
  99 0042 2144     		add	r1, r1, r4
 100 0044 3220     		movs	r0, #50
 101 0046 FFF7FEFF 		bl	ST7735_WriteJustifyString
 102              	.LVL6:
  80:Core/Src/menu.c **** 
  81:Core/Src/menu.c ****   return RETURN_OK;
 103              		.loc 1 81 3 view .LVU12
  82:Core/Src/menu.c **** }
 104              		.loc 1 82 1 is_stmt 0 view .LVU13
 105 004a 2846     		mov	r0, r5
 106 004c 04B0     		add	sp, sp, #16
 107              		.cfi_def_cfa_offset 16
 108              		@ sp needed
 109 004e 70BD     		pop	{r4, r5, r6, pc}
 110              	.L5:
 111              		.align	2
 112              	.L4:
 113 0050 00000000 		.word	Font_11x18
 114 0054 00000000 		.word	menu_titles
 115 0058 00000000 		.word	Font_7x10
 116 005c 00000000 		.word	menu_cont
 117              		.cfi_endproc
 118              	.LFE68:
 120              		.section	.text.serveMenuScreen,"ax",%progbits
 121              		.align	1
 122              		.global	serveMenuScreen
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 127              	serveMenuScreen:
 128              	.LVL7:
 129              	.LFB66:
  39:Core/Src/menu.c **** 
 130              		.loc 1 39 71 is_stmt 1 view -0
 131              		.cfi_startproc
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
  39:Core/Src/menu.c **** 
 134              		.loc 1 39 71 is_stmt 0 view .LVU15
 135 0000 10B5     		push	{r4, lr}
 136              		.cfi_def_cfa_offset 8
 137              		.cfi_offset 4, -8
 138              		.cfi_offset 14, -4
 139 0002 0446     		mov	r4, r0
  42:Core/Src/menu.c ****     if(menu_h->curr_screen < (MENUS_NUM-1))menu_h->curr_screen = (menu_h->curr_screen + 1);
 140              		.loc 1 42 3 is_stmt 1 view .LVU16
  42:Core/Src/menu.c ****     if(menu_h->curr_screen < (MENUS_NUM-1))menu_h->curr_screen = (menu_h->curr_screen + 1);
 141              		.loc 1 42 14 is_stmt 0 view .LVU17
 142 0004 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
  42:Core/Src/menu.c ****     if(menu_h->curr_screen < (MENUS_NUM-1))menu_h->curr_screen = (menu_h->curr_screen + 1);
 143              		.loc 1 42 5 view .LVU18
 144 0006 DC2B     		cmp	r3, #220
 145 0008 0ED9     		bls	.L7
  43:Core/Src/menu.c ****     else menu_h->curr_screen = Manual_move;
ARM GAS  /tmp/cc1FHjKq.s 			page 5


 146              		.loc 1 43 5 is_stmt 1 view .LVU19
  43:Core/Src/menu.c ****     else menu_h->curr_screen = Manual_move;
 147              		.loc 1 43 14 is_stmt 0 view .LVU20
 148 000a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  43:Core/Src/menu.c ****     else menu_h->curr_screen = Manual_move;
 149              		.loc 1 43 7 view .LVU21
 150 000c 092B     		cmp	r3, #9
 151 000e 08D8     		bhi	.L8
  43:Core/Src/menu.c ****     else menu_h->curr_screen = Manual_move;
 152              		.loc 1 43 44 is_stmt 1 discriminator 1 view .LVU22
  43:Core/Src/menu.c ****     else menu_h->curr_screen = Manual_move;
 153              		.loc 1 43 87 is_stmt 0 discriminator 1 view .LVU23
 154 0010 0133     		adds	r3, r3, #1
  43:Core/Src/menu.c ****     else menu_h->curr_screen = Manual_move;
 155              		.loc 1 43 64 discriminator 1 view .LVU24
 156 0012 0370     		strb	r3, [r0]
 157              	.L9:
  45:Core/Src/menu.c ****   } 
 158              		.loc 1 45 5 is_stmt 1 view .LVU25
  45:Core/Src/menu.c ****   } 
 159              		.loc 1 45 27 is_stmt 0 view .LVU26
 160 0014 0123     		movs	r3, #1
 161 0016 6370     		strb	r3, [r4, #1]
 162              	.L10:
  57:Core/Src/menu.c ****     drawMenuScreen(menu_h->curr_screen);
 163              		.loc 1 57 3 is_stmt 1 view .LVU27
  57:Core/Src/menu.c ****     drawMenuScreen(menu_h->curr_screen);
 164              		.loc 1 57 12 is_stmt 0 view .LVU28
 165 0018 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
  57:Core/Src/menu.c ****     drawMenuScreen(menu_h->curr_screen);
 166              		.loc 1 57 5 view .LVU29
 167 001a 012B     		cmp	r3, #1
 168 001c 11D0     		beq	.L16
 169              	.LVL8:
 170              	.L13:
  67:Core/Src/menu.c **** }
 171              		.loc 1 67 3 is_stmt 1 view .LVU30
  68:Core/Src/menu.c **** 
 172              		.loc 1 68 1 is_stmt 0 view .LVU31
 173 001e 0020     		movs	r0, #0
 174 0020 10BD     		pop	{r4, pc}
 175              	.LVL9:
 176              	.L8:
  44:Core/Src/menu.c ****     menu_h->update_needed = true;
 177              		.loc 1 44 10 is_stmt 1 view .LVU32
  44:Core/Src/menu.c ****     menu_h->update_needed = true;
 178              		.loc 1 44 30 is_stmt 0 view .LVU33
 179 0022 0223     		movs	r3, #2
 180 0024 0370     		strb	r3, [r0]
 181 0026 F5E7     		b	.L9
 182              	.L7:
  49:Core/Src/menu.c ****     if(menu_h->curr_screen > Manual_move)menu_h->curr_screen = (menu_h->curr_screen - 1);
 183              		.loc 1 49 8 is_stmt 1 view .LVU34
  49:Core/Src/menu.c ****     if(menu_h->curr_screen > Manual_move)menu_h->curr_screen = (menu_h->curr_screen - 1);
 184              		.loc 1 49 10 is_stmt 0 view .LVU35
 185 0028 1D2B     		cmp	r3, #29
 186 002a F5D8     		bhi	.L10
ARM GAS  /tmp/cc1FHjKq.s 			page 6


  50:Core/Src/menu.c ****     else menu_h->curr_screen = Grid_setup_manual;
 187              		.loc 1 50 5 is_stmt 1 view .LVU36
  50:Core/Src/menu.c ****     else menu_h->curr_screen = Grid_setup_manual;
 188              		.loc 1 50 14 is_stmt 0 view .LVU37
 189 002c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  50:Core/Src/menu.c ****     else menu_h->curr_screen = Grid_setup_manual;
 190              		.loc 1 50 7 view .LVU38
 191 002e 022B     		cmp	r3, #2
 192 0030 04D9     		bls	.L11
  50:Core/Src/menu.c ****     else menu_h->curr_screen = Grid_setup_manual;
 193              		.loc 1 50 42 is_stmt 1 discriminator 1 view .LVU39
  50:Core/Src/menu.c ****     else menu_h->curr_screen = Grid_setup_manual;
 194              		.loc 1 50 85 is_stmt 0 discriminator 1 view .LVU40
 195 0032 013B     		subs	r3, r3, #1
  50:Core/Src/menu.c ****     else menu_h->curr_screen = Grid_setup_manual;
 196              		.loc 1 50 62 discriminator 1 view .LVU41
 197 0034 0370     		strb	r3, [r0]
 198              	.L12:
  52:Core/Src/menu.c ****   } 
 199              		.loc 1 52 5 is_stmt 1 view .LVU42
  52:Core/Src/menu.c ****   } 
 200              		.loc 1 52 27 is_stmt 0 view .LVU43
 201 0036 0123     		movs	r3, #1
 202 0038 6370     		strb	r3, [r4, #1]
 203 003a EDE7     		b	.L10
 204              	.L11:
  51:Core/Src/menu.c ****     menu_h->update_needed = true;
 205              		.loc 1 51 10 is_stmt 1 view .LVU44
  51:Core/Src/menu.c ****     menu_h->update_needed = true;
 206              		.loc 1 51 30 is_stmt 0 view .LVU45
 207 003c 0523     		movs	r3, #5
 208 003e 0370     		strb	r3, [r0]
 209 0040 F9E7     		b	.L12
 210              	.L16:
  58:Core/Src/menu.c ****     menu_h->update_needed = false;
 211              		.loc 1 58 5 is_stmt 1 view .LVU46
 212 0042 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 213              	.LVL10:
  58:Core/Src/menu.c ****     menu_h->update_needed = false;
 214              		.loc 1 58 5 is_stmt 0 view .LVU47
 215 0044 FFF7FEFF 		bl	drawMenuScreen
 216              	.LVL11:
  59:Core/Src/menu.c ****     if(menu_h->curr_screen == Home_screen){
 217              		.loc 1 59 5 is_stmt 1 view .LVU48
  59:Core/Src/menu.c ****     if(menu_h->curr_screen == Home_screen){
 218              		.loc 1 59 27 is_stmt 0 view .LVU49
 219 0048 0023     		movs	r3, #0
 220 004a 6370     		strb	r3, [r4, #1]
  60:Core/Src/menu.c ****       menu_h->curr_screen += 1;
 221              		.loc 1 60 5 is_stmt 1 view .LVU50
  60:Core/Src/menu.c ****       menu_h->curr_screen += 1;
 222              		.loc 1 60 14 is_stmt 0 view .LVU51
 223 004c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
  60:Core/Src/menu.c ****       menu_h->curr_screen += 1;
 224              		.loc 1 60 7 view .LVU52
 225 004e 012B     		cmp	r3, #1
 226 0050 04D0     		beq	.L17
ARM GAS  /tmp/cc1FHjKq.s 			page 7


 227              	.L14:
  64:Core/Src/menu.c ****   }
 228              		.loc 1 64 5 is_stmt 1 view .LVU53
 229 0052 4FF4FA70 		mov	r0, #500
 230 0056 FFF7FEFF 		bl	HAL_Delay
 231              	.LVL12:
 232 005a E0E7     		b	.L13
 233              	.L17:
  61:Core/Src/menu.c ****       menu_h->update_needed = true; 
 234              		.loc 1 61 7 view .LVU54
  61:Core/Src/menu.c ****       menu_h->update_needed = true; 
 235              		.loc 1 61 27 is_stmt 0 view .LVU55
 236 005c 0133     		adds	r3, r3, #1
 237 005e 2370     		strb	r3, [r4]
  62:Core/Src/menu.c ****     }
 238              		.loc 1 62 7 is_stmt 1 view .LVU56
  62:Core/Src/menu.c ****     }
 239              		.loc 1 62 29 is_stmt 0 view .LVU57
 240 0060 0123     		movs	r3, #1
 241 0062 6370     		strb	r3, [r4, #1]
 242 0064 F5E7     		b	.L14
 243              		.cfi_endproc
 244              	.LFE66:
 246              		.section	.text.setMenuTexts,"ax",%progbits
 247              		.align	1
 248              		.global	setMenuTexts
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	setMenuTexts:
 254              	.LVL13:
 255              	.LFB69:
  83:Core/Src/menu.c **** 
  84:Core/Src/menu.c **** 
  85:Core/Src/menu.c **** uint8_t setMenuTexts(char *dest, const char *cont){
 256              		.loc 1 85 51 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		.loc 1 85 51 is_stmt 0 view .LVU59
 261 0000 38B5     		push	{r3, r4, r5, lr}
 262              		.cfi_def_cfa_offset 16
 263              		.cfi_offset 3, -16
 264              		.cfi_offset 4, -12
 265              		.cfi_offset 5, -8
 266              		.cfi_offset 14, -4
 267 0002 0546     		mov	r5, r0
 268 0004 0C46     		mov	r4, r1
  86:Core/Src/menu.c ****   uint8_t cont_size = strlen(cont)+1;
 269              		.loc 1 86 3 is_stmt 1 view .LVU60
 270              		.loc 1 86 23 is_stmt 0 view .LVU61
 271 0006 0846     		mov	r0, r1
 272              	.LVL14:
 273              		.loc 1 86 23 view .LVU62
 274 0008 FFF7FEFF 		bl	strlen
 275              	.LVL15:
 276              		.loc 1 86 35 view .LVU63
ARM GAS  /tmp/cc1FHjKq.s 			page 8


 277 000c C2B2     		uxtb	r2, r0
 278              		.loc 1 86 11 view .LVU64
 279 000e 0132     		adds	r2, r2, #1
 280              	.LVL16:
  87:Core/Src/menu.c ****   strncpy(dest,cont,cont_size);
 281              		.loc 1 87 3 is_stmt 1 view .LVU65
 282 0010 D2B2     		uxtb	r2, r2
 283              		.loc 1 87 3 is_stmt 0 view .LVU66
 284 0012 2146     		mov	r1, r4
 285 0014 2846     		mov	r0, r5
 286 0016 FFF7FEFF 		bl	strncpy
 287              	.LVL17:
  88:Core/Src/menu.c ****   return RETURN_OK;
 288              		.loc 1 88 3 is_stmt 1 view .LVU67
  89:Core/Src/menu.c **** }
 289              		.loc 1 89 1 is_stmt 0 view .LVU68
 290 001a 0020     		movs	r0, #0
 291 001c 38BD     		pop	{r3, r4, r5, pc}
 292              		.loc 1 89 1 view .LVU69
 293              		.cfi_endproc
 294              	.LFE69:
 296              		.section	.rodata.initMenu.str1.4,"aMS",%progbits,1
 297              		.align	2
 298              	.LC0:
 299 0000 506C6F74 		.ascii	"Plotter ON\000"
 299      74657220 
 299      4F4E00
 300 000b 00       		.align	2
 301              	.LC1:
 302 000c 496E6974 		.ascii	"Init. man move\000"
 302      2E206D61 
 302      6E206D6F 
 302      766500
 303 001b 00       		.align	2
 304              	.LC2:
 305 001c 53657420 		.ascii	"Set Zero Pos.\000"
 305      5A65726F 
 305      20506F73 
 305      2E00
 306 002a 0000     		.align	2
 307              	.LC3:
 308 002c 4175746F 		.ascii	"Auto. Setup\000"
 308      2E205365 
 308      74757000 
 309              		.align	2
 310              	.LC4:
 311 0038 4D616E2E 		.ascii	"Man. Setup\000"
 311      20536574 
 311      757000
 312 0043 00       		.align	2
 313              	.LC5:
 314 0044 53657420 		.ascii	"Set (0,0)-pos\000"
 314      28302C30 
 314      292D706F 
 314      7300
 315 0052 0000     		.align	2
 316              	.LC6:
ARM GAS  /tmp/cc1FHjKq.s 			page 9


 317 0054 53657420 		.ascii	"Set next-pos\000"
 317      6E657874 
 317      2D706F73 
 317      00
 318 0061 000000   		.align	2
 319              	.LC7:
 320 0064 53554343 		.ascii	"SUCCESS!\000"
 320      45535321 
 320      00
 321 006d 000000   		.align	2
 322              	.LC8:
 323 0070 4641494C 		.ascii	"FAILED!\000"
 323      45442100 
 324              		.align	2
 325              	.LC9:
 326 0078 52756E20 		.ascii	"Run Next?\000"
 326      4E657874 
 326      3F00
 327 0082 0000     		.align	2
 328              	.LC10:
 329 0084 4E455645 		.ascii	"NEVER REACHED\000"
 329      52205245 
 329      41434845 
 329      4400
 330 0092 0000     		.align	2
 331              	.LC11:
 332 0094 00       		.ascii	"\000"
 333 0095 000000   		.align	2
 334              	.LC12:
 335 0098 4D616E75 		.ascii	"Manually move plotter using joypad\000"
 335      616C6C79 
 335      206D6F76 
 335      6520706C 
 335      6F747465 
 336 00bb 00       		.align	2
 337              	.LC13:
 338 00bc 53657420 		.ascii	"Set current possition as origin (0,0)\000"
 338      63757272 
 338      656E7420 
 338      706F7373 
 338      6974696F 
 339 00e2 0000     		.align	2
 340              	.LC14:
 341 00e4 4175746F 		.ascii	"Automatically setup the flash pin positions\000"
 341      6D617469 
 341      63616C6C 
 341      79207365 
 341      74757020 
 342              		.align	2
 343              	.LC15:
 344 0110 4D616E75 		.ascii	"Manually setup the flash pin positions\000"
 344      616C6C79 
 344      20736574 
 344      75702074 
 344      68652066 
 345 0137 00       		.align	2
 346              	.LC16:
ARM GAS  /tmp/cc1FHjKq.s 			page 10


 347 0138 53657420 		.ascii	"Set start position\000"
 347      73746172 
 347      7420706F 
 347      73697469 
 347      6F6E00
 348 014b 00       		.align	2
 349              	.LC17:
 350 014c 53657420 		.ascii	"Set next position\000"
 350      6E657874 
 350      20706F73 
 350      6974696F 
 350      6E00
 351 015e 0000     		.align	2
 352              	.LC18:
 353 0160 50726573 		.ascii	"Press SELECT when next batch loaded.\012Press CANCE"
 353      73205345 
 353      4C454354 
 353      20776865 
 353      6E206E65 
 354 0190 4C20746F 		.ascii	"L to stop flashing.\000"
 354      2073746F 
 354      7020666C 
 354      61736869 
 354      6E672E00 
 355              		.section	.text.initMenu,"ax",%progbits
 356              		.align	1
 357              		.global	initMenu
 358              		.syntax unified
 359              		.thumb
 360              		.thumb_func
 362              	initMenu:
 363              	.LVL18:
 364              	.LFB65:
   6:Core/Src/menu.c ****   ST7735_Init();
 365              		.loc 1 6 45 is_stmt 1 view -0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
   6:Core/Src/menu.c ****   ST7735_Init();
 369              		.loc 1 6 45 is_stmt 0 view .LVU71
 370 0000 70B5     		push	{r4, r5, r6, lr}
 371              		.cfi_def_cfa_offset 16
 372              		.cfi_offset 4, -16
 373              		.cfi_offset 5, -12
 374              		.cfi_offset 6, -8
 375              		.cfi_offset 14, -4
 376 0002 0446     		mov	r4, r0
   7:Core/Src/menu.c ****   ST7735_FillScreen(ST7735_GRAY);
 377              		.loc 1 7 3 is_stmt 1 view .LVU72
 378 0004 FFF7FEFF 		bl	ST7735_Init
 379              	.LVL19:
   8:Core/Src/menu.c ****   menu_h->curr_screen = Home_screen;
 380              		.loc 1 8 3 view .LVU73
 381 0008 4AF21450 		movw	r0, #42260
 382 000c FFF7FEFF 		bl	ST7735_FillScreen
 383              	.LVL20:
   9:Core/Src/menu.c ****   menu_h->update_needed = true;
ARM GAS  /tmp/cc1FHjKq.s 			page 11


 384              		.loc 1 9 3 view .LVU74
   9:Core/Src/menu.c ****   menu_h->update_needed = true;
 385              		.loc 1 9 23 is_stmt 0 view .LVU75
 386 0010 0123     		movs	r3, #1
 387 0012 2370     		strb	r3, [r4]
  10:Core/Src/menu.c ****   menu_h->alarm_count = 0;
 388              		.loc 1 10 3 is_stmt 1 view .LVU76
  10:Core/Src/menu.c ****   menu_h->alarm_count = 0;
 389              		.loc 1 10 25 is_stmt 0 view .LVU77
 390 0014 6370     		strb	r3, [r4, #1]
  11:Core/Src/menu.c **** 
 391              		.loc 1 11 3 is_stmt 1 view .LVU78
  11:Core/Src/menu.c **** 
 392              		.loc 1 11 23 is_stmt 0 view .LVU79
 393 0016 0026     		movs	r6, #0
 394 0018 A670     		strb	r6, [r4, #2]
  13:Core/Src/menu.c ****   setMenuTexts(menu_titles[Manual_move],"Init. man move");
 395              		.loc 1 13 3 is_stmt 1 view .LVU80
 396 001a 364C     		ldr	r4, .L22
 397              	.LVL21:
  13:Core/Src/menu.c ****   setMenuTexts(menu_titles[Manual_move],"Init. man move");
 398              		.loc 1 13 3 is_stmt 0 view .LVU81
 399 001c 3649     		ldr	r1, .L22+4
 400 001e 2046     		mov	r0, r4
 401 0020 FFF7FEFF 		bl	setMenuTexts
 402              	.LVL22:
  14:Core/Src/menu.c ****   setMenuTexts(menu_titles[Zero_pos],"Set Zero Pos.");
 403              		.loc 1 14 3 is_stmt 1 view .LVU82
 404 0024 3549     		ldr	r1, .L22+8
 405 0026 04F16400 		add	r0, r4, #100
 406 002a FFF7FEFF 		bl	setMenuTexts
 407              	.LVL23:
  15:Core/Src/menu.c ****   setMenuTexts(menu_titles[Grid_setup_auto],"Auto. Setup");
 408              		.loc 1 15 3 view .LVU83
 409 002e 3449     		ldr	r1, .L22+12
 410 0030 04F1C800 		add	r0, r4, #200
 411 0034 FFF7FEFF 		bl	setMenuTexts
 412              	.LVL24:
  16:Core/Src/menu.c ****   setMenuTexts(menu_titles[Grid_setup_manual],"Man. Setup");
 413              		.loc 1 16 3 view .LVU84
 414 0038 3249     		ldr	r1, .L22+16
 415 003a 04F59670 		add	r0, r4, #300
 416 003e FFF7FEFF 		bl	setMenuTexts
 417              	.LVL25:
  17:Core/Src/menu.c ****   setMenuTexts(menu_titles[Grid_setup_zero],"Set (0,0)-pos");
 418              		.loc 1 17 3 view .LVU85
 419 0042 3149     		ldr	r1, .L22+20
 420 0044 04F5C870 		add	r0, r4, #400
 421 0048 FFF7FEFF 		bl	setMenuTexts
 422              	.LVL26:
  18:Core/Src/menu.c ****   setMenuTexts(menu_titles[Grid_setup_move],"Set next-pos");
 423              		.loc 1 18 3 view .LVU86
 424 004c 2F49     		ldr	r1, .L22+24
 425 004e 04F5FA70 		add	r0, r4, #500
 426 0052 FFF7FEFF 		bl	setMenuTexts
 427              	.LVL27:
  19:Core/Src/menu.c ****   setMenuTexts(menu_titles[Success_screen],"SUCCESS!");
ARM GAS  /tmp/cc1FHjKq.s 			page 12


 428              		.loc 1 19 3 view .LVU87
 429 0056 2E49     		ldr	r1, .L22+28
 430 0058 04F51670 		add	r0, r4, #600
 431 005c FFF7FEFF 		bl	setMenuTexts
 432              	.LVL28:
  20:Core/Src/menu.c ****   setMenuTexts(menu_titles[Fail_screen],"FAILED!");
 433              		.loc 1 20 3 view .LVU88
 434 0060 2C49     		ldr	r1, .L22+32
 435 0062 04F52F70 		add	r0, r4, #700
 436 0066 FFF7FEFF 		bl	setMenuTexts
 437              	.LVL29:
  21:Core/Src/menu.c ****   setMenuTexts(menu_titles[Next_batch],"Run Next?");
 438              		.loc 1 21 3 view .LVU89
 439 006a 2B49     		ldr	r1, .L22+36
 440 006c 04F54870 		add	r0, r4, #800
 441 0070 FFF7FEFF 		bl	setMenuTexts
 442              	.LVL30:
  22:Core/Src/menu.c ****   setMenuTexts(menu_titles[MENUS_NUM],"NEVER REACHED");
 443              		.loc 1 22 3 view .LVU90
 444 0074 2949     		ldr	r1, .L22+40
 445 0076 04F56170 		add	r0, r4, #900
 446 007a FFF7FEFF 		bl	setMenuTexts
 447              	.LVL31:
  23:Core/Src/menu.c **** 
 448              		.loc 1 23 3 view .LVU91
 449 007e 2849     		ldr	r1, .L22+44
 450 0080 04F57A70 		add	r0, r4, #1000
 451 0084 FFF7FEFF 		bl	setMenuTexts
 452              	.LVL32:
  25:Core/Src/menu.c ****   setMenuTexts(menu_cont[Manual_move],"Manually move plotter using joypad");
 453              		.loc 1 25 3 view .LVU92
 454 0088 264D     		ldr	r5, .L22+48
 455 008a 274C     		ldr	r4, .L22+52
 456 008c 2946     		mov	r1, r5
 457 008e 2046     		mov	r0, r4
 458 0090 FFF7FEFF 		bl	setMenuTexts
 459              	.LVL33:
  26:Core/Src/menu.c ****   setMenuTexts(menu_cont[Zero_pos],"Set current possition as origin (0,0)");
 460              		.loc 1 26 3 view .LVU93
 461 0094 2549     		ldr	r1, .L22+56
 462 0096 04F16400 		add	r0, r4, #100
 463 009a FFF7FEFF 		bl	setMenuTexts
 464              	.LVL34:
  27:Core/Src/menu.c ****   setMenuTexts(menu_cont[Grid_setup_auto],"Automatically setup the flash pin positions");
 465              		.loc 1 27 3 view .LVU94
 466 009e 2449     		ldr	r1, .L22+60
 467 00a0 04F1C800 		add	r0, r4, #200
 468 00a4 FFF7FEFF 		bl	setMenuTexts
 469              	.LVL35:
  28:Core/Src/menu.c ****   setMenuTexts(menu_cont[Grid_setup_manual],"Manually setup the flash pin positions");
 470              		.loc 1 28 3 view .LVU95
 471 00a8 2249     		ldr	r1, .L22+64
 472 00aa 04F59670 		add	r0, r4, #300
 473 00ae FFF7FEFF 		bl	setMenuTexts
 474              	.LVL36:
  29:Core/Src/menu.c ****   setMenuTexts(menu_cont[Grid_setup_zero],"Set start position");
 475              		.loc 1 29 3 view .LVU96
ARM GAS  /tmp/cc1FHjKq.s 			page 13


 476 00b2 2149     		ldr	r1, .L22+68
 477 00b4 04F5C870 		add	r0, r4, #400
 478 00b8 FFF7FEFF 		bl	setMenuTexts
 479              	.LVL37:
  30:Core/Src/menu.c ****   setMenuTexts(menu_cont[Grid_setup_move],"Set next position");
 480              		.loc 1 30 3 view .LVU97
 481 00bc 1F49     		ldr	r1, .L22+72
 482 00be 04F5FA70 		add	r0, r4, #500
 483 00c2 FFF7FEFF 		bl	setMenuTexts
 484              	.LVL38:
  31:Core/Src/menu.c ****   setMenuTexts(menu_cont[Success_screen],"");
 485              		.loc 1 31 3 view .LVU98
 486 00c6 1E49     		ldr	r1, .L22+76
 487 00c8 04F51670 		add	r0, r4, #600
 488 00cc FFF7FEFF 		bl	setMenuTexts
 489              	.LVL39:
  32:Core/Src/menu.c ****   setMenuTexts(menu_cont[Fail_screen],"");
 490              		.loc 1 32 3 view .LVU99
 491 00d0 2946     		mov	r1, r5
 492 00d2 04F52F70 		add	r0, r4, #700
 493 00d6 FFF7FEFF 		bl	setMenuTexts
 494              	.LVL40:
  33:Core/Src/menu.c ****   setMenuTexts(menu_cont[Next_batch],"Press SELECT when next batch loaded.\nPress CANCEL to stop fl
 495              		.loc 1 33 3 view .LVU100
 496 00da 2946     		mov	r1, r5
 497 00dc 04F54870 		add	r0, r4, #800
 498 00e0 FFF7FEFF 		bl	setMenuTexts
 499              	.LVL41:
  34:Core/Src/menu.c **** 
 500              		.loc 1 34 3 view .LVU101
 501 00e4 1749     		ldr	r1, .L22+80
 502 00e6 04F56170 		add	r0, r4, #900
 503 00ea FFF7FEFF 		bl	setMenuTexts
 504              	.LVL42:
  36:Core/Src/menu.c **** }
 505              		.loc 1 36 3 view .LVU102
  37:Core/Src/menu.c **** 
 506              		.loc 1 37 1 is_stmt 0 view .LVU103
 507 00ee 3046     		mov	r0, r6
 508 00f0 70BD     		pop	{r4, r5, r6, pc}
 509              	.L23:
 510 00f2 00BF     		.align	2
 511              	.L22:
 512 00f4 64000000 		.word	menu_titles+100
 513 00f8 00000000 		.word	.LC0
 514 00fc 0C000000 		.word	.LC1
 515 0100 1C000000 		.word	.LC2
 516 0104 2C000000 		.word	.LC3
 517 0108 38000000 		.word	.LC4
 518 010c 44000000 		.word	.LC5
 519 0110 54000000 		.word	.LC6
 520 0114 64000000 		.word	.LC7
 521 0118 70000000 		.word	.LC8
 522 011c 78000000 		.word	.LC9
 523 0120 84000000 		.word	.LC10
 524 0124 94000000 		.word	.LC11
 525 0128 64000000 		.word	menu_cont+100
ARM GAS  /tmp/cc1FHjKq.s 			page 14


 526 012c 98000000 		.word	.LC12
 527 0130 BC000000 		.word	.LC13
 528 0134 E4000000 		.word	.LC14
 529 0138 10010000 		.word	.LC15
 530 013c 38010000 		.word	.LC16
 531 0140 4C010000 		.word	.LC17
 532 0144 60010000 		.word	.LC18
 533              		.cfi_endproc
 534              	.LFE65:
 536              		.global	menu_cont
 537              		.section	.bss.menu_cont,"aw",%nobits
 538              		.align	2
 541              	menu_cont:
 542 0000 00000000 		.space	1200
 542      00000000 
 542      00000000 
 542      00000000 
 542      00000000 
 543              		.global	menu_titles
 544              		.section	.bss.menu_titles,"aw",%nobits
 545              		.align	2
 548              	menu_titles:
 549 0000 00000000 		.space	1200
 549      00000000 
 549      00000000 
 549      00000000 
 549      00000000 
 550              		.text
 551              	.Letext0:
 552              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 553              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 554              		.file 4 "/usr/lib/gcc/arm-none-eabi/12.2.0/include/stddef.h"
 555              		.file 5 "Core/Inc/main.h"
 556              		.file 6 "Core/Lib/st7735/fonts.h"
 557              		.file 7 "Core/Lib/st7735/st7735.h"
 558              		.file 8 "Core/Inc/menu.h"
 559              		.file 9 "/usr/arm-none-eabi/include/string.h"
 560              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/cc1FHjKq.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 menu.c
     /tmp/cc1FHjKq.s:19     .text.serveMenuFunc:0000000000000000 $t
     /tmp/cc1FHjKq.s:25     .text.serveMenuFunc:0000000000000000 serveMenuFunc
     /tmp/cc1FHjKq.s:43     .text.drawMenuScreen:0000000000000000 $t
     /tmp/cc1FHjKq.s:49     .text.drawMenuScreen:0000000000000000 drawMenuScreen
     /tmp/cc1FHjKq.s:113    .text.drawMenuScreen:0000000000000050 $d
     /tmp/cc1FHjKq.s:548    .bss.menu_titles:0000000000000000 menu_titles
     /tmp/cc1FHjKq.s:541    .bss.menu_cont:0000000000000000 menu_cont
     /tmp/cc1FHjKq.s:121    .text.serveMenuScreen:0000000000000000 $t
     /tmp/cc1FHjKq.s:127    .text.serveMenuScreen:0000000000000000 serveMenuScreen
     /tmp/cc1FHjKq.s:247    .text.setMenuTexts:0000000000000000 $t
     /tmp/cc1FHjKq.s:253    .text.setMenuTexts:0000000000000000 setMenuTexts
     /tmp/cc1FHjKq.s:297    .rodata.initMenu.str1.4:0000000000000000 $d
     /tmp/cc1FHjKq.s:356    .text.initMenu:0000000000000000 $t
     /tmp/cc1FHjKq.s:362    .text.initMenu:0000000000000000 initMenu
     /tmp/cc1FHjKq.s:512    .text.initMenu:00000000000000f4 $d
     /tmp/cc1FHjKq.s:538    .bss.menu_cont:0000000000000000 $d
     /tmp/cc1FHjKq.s:545    .bss.menu_titles:0000000000000000 $d

UNDEFINED SYMBOLS
ST7735_FillScreen
ST7735_WriteJustifyString
Font_11x18
Font_7x10
HAL_Delay
strlen
strncpy
ST7735_Init
