ARM GAS  /tmp/cclSMvqi.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"execution.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.rodata.initSetupData.str1.4,"aMS",%progbits,1
  16              		.align	2
  17              	.LC0:
  18 0000 4E6F2046 		.ascii	"No Fail\000"
  18      61696C00 
  19              		.section	.text.initSetupData,"ax",%progbits
  20              		.align	1
  21              		.global	initSetupData
  22              		.arch armv7-m
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  26              		.fpu softvfp
  28              	initSetupData:
  29              	.LVL0:
  30              	.LFB65:
  31              		.file 1 "Core/Src/execution.c"
   1:Core/Src/execution.c **** /**
   2:Core/Src/execution.c ****  * @file execution.c
   3:Core/Src/execution.c ****  * @author your name (you@domain.com)
   4:Core/Src/execution.c ****  * @brief 
   5:Core/Src/execution.c ****  * @version 0.1
   6:Core/Src/execution.c ****  * @date 2023-01-15
   7:Core/Src/execution.c ****  * 
   8:Core/Src/execution.c ****  * @copyright Copyright (c) 2023
   9:Core/Src/execution.c ****  * 
  10:Core/Src/execution.c ****  */
  11:Core/Src/execution.c **** 
  12:Core/Src/execution.c **** #include "execution.h"
  13:Core/Src/execution.c **** 
  14:Core/Src/execution.c **** 
  15:Core/Src/execution.c **** 
  16:Core/Src/execution.c **** uint8_t initSetupData(struct setup_data *setup_data_h){
  32              		.loc 1 16 55 view -0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              		.loc 1 16 55 is_stmt 0 view .LVU1
  37 0000 10B5     		push	{r4, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 4, -8
  40              		.cfi_offset 14, -4
  17:Core/Src/execution.c ****  
ARM GAS  /tmp/cclSMvqi.s 			page 2


  18:Core/Src/execution.c ****   setup_data_h->exec_status = Idle;
  41              		.loc 1 18 3 is_stmt 1 view .LVU2
  42              		.loc 1 18 29 is_stmt 0 view .LVU3
  43 0002 0423     		movs	r3, #4
  44 0004 0370     		strb	r3, [r0]
  19:Core/Src/execution.c ****   setup_data_h->flash_matrix_dims[0] = 0;
  45              		.loc 1 19 3 is_stmt 1 view .LVU4
  46              		.loc 1 19 38 is_stmt 0 view .LVU5
  47 0006 0024     		movs	r4, #0
  48 0008 8471     		strb	r4, [r0, #6]
  20:Core/Src/execution.c ****   setup_data_h->flash_matrix_dims[1] = 0;
  49              		.loc 1 20 3 is_stmt 1 view .LVU6
  50              		.loc 1 20 38 is_stmt 0 view .LVU7
  51 000a C471     		strb	r4, [r0, #7]
  21:Core/Src/execution.c ****   setup_data_h->flash_matrix_pos[0] = 0;
  52              		.loc 1 21 3 is_stmt 1 view .LVU8
  53              		.loc 1 21 37 is_stmt 0 view .LVU9
  54 000c 0472     		strb	r4, [r0, #8]
  22:Core/Src/execution.c ****   setup_data_h->flash_matrix_pos[1] = 0;
  55              		.loc 1 22 3 is_stmt 1 view .LVU10
  56              		.loc 1 22 37 is_stmt 0 view .LVU11
  57 000e 4472     		strb	r4, [r0, #9]
  23:Core/Src/execution.c ****   setup_data_h->offset_x = 0;
  58              		.loc 1 23 3 is_stmt 1 view .LVU12
  59              		.loc 1 23 26 is_stmt 0 view .LVU13
  60 0010 4480     		strh	r4, [r0, #2]	@ movhi
  24:Core/Src/execution.c ****   setup_data_h->offset_y = 0;
  61              		.loc 1 24 3 is_stmt 1 view .LVU14
  62              		.loc 1 24 26 is_stmt 0 view .LVU15
  63 0012 8480     		strh	r4, [r0, #4]	@ movhi
  25:Core/Src/execution.c ****   strncpy(setup_data_h->fail_msg,"No Fail",ERR_ARRAY_SIZE);
  64              		.loc 1 25 3 is_stmt 1 view .LVU16
  65 0014 FF22     		movs	r2, #255
  66 0016 0349     		ldr	r1, .L3
  67 0018 0A30     		adds	r0, r0, #10
  68              	.LVL1:
  69              		.loc 1 25 3 is_stmt 0 view .LVU17
  70 001a FFF7FEFF 		bl	strncpy
  71              	.LVL2:
  26:Core/Src/execution.c ****   return RETURN_OK;
  72              		.loc 1 26 3 is_stmt 1 view .LVU18
  27:Core/Src/execution.c **** }
  73              		.loc 1 27 1 is_stmt 0 view .LVU19
  74 001e 2046     		mov	r0, r4
  75 0020 10BD     		pop	{r4, pc}
  76              	.L4:
  77 0022 00BF     		.align	2
  78              	.L3:
  79 0024 00000000 		.word	.LC0
  80              		.cfi_endproc
  81              	.LFE65:
  83              		.section	.text.plotterMoving,"ax",%progbits
  84              		.align	1
  85              		.global	plotterMoving
  86              		.syntax unified
  87              		.thumb
  88              		.thumb_func
ARM GAS  /tmp/cclSMvqi.s 			page 3


  89              		.fpu softvfp
  91              	plotterMoving:
  92              	.LVL3:
  93              	.LFB68:
  28:Core/Src/execution.c **** 
  29:Core/Src/execution.c **** 
  30:Core/Src/execution.c **** 
  31:Core/Src/execution.c **** 
  32:Core/Src/execution.c **** /**
  33:Core/Src/execution.c ****  * @brief Zeroes the plotter internal coordinates to current position
  34:Core/Src/execution.c ****  * 
  35:Core/Src/execution.c ****  * @param comm_data_h handle containing the uart communication handle and data buffers
  36:Core/Src/execution.c ****  * @return uint8_t RETURN_OK
  37:Core/Src/execution.c ****  */
  38:Core/Src/execution.c **** static uint8_t setZero(struct comm_data *comm_data_h){
  39:Core/Src/execution.c ****   //char command[TX_BUFF_SIZE];
  40:Core/Src/execution.c **** 
  41:Core/Src/execution.c ****   return RETURN_OK;
  42:Core/Src/execution.c **** }
  43:Core/Src/execution.c **** 
  44:Core/Src/execution.c **** 
  45:Core/Src/execution.c **** 
  46:Core/Src/execution.c **** uint8_t manualControl(uint8_t *joy_vals, setup_data *setup_data_h, comm_data *comm_h){
  47:Core/Src/execution.c ****   float move_dist[2] = {0.0};
  48:Core/Src/execution.c **** 
  49:Core/Src/execution.c ****   if(joy_vals[0] > 230)move_dist[0] = 10.0;
  50:Core/Src/execution.c ****   else if(joy_vals[0] > 160) move_dist[0] = 1.0;
  51:Core/Src/execution.c ****   else if(joy_vals[0] < 26)move_dist[0] = -10.0;
  52:Core/Src/execution.c ****   else if(joy_vals[0] < 96) move_dist[0] = -1.0;
  53:Core/Src/execution.c ****   else move_dist[0] = 0.0;
  54:Core/Src/execution.c **** 
  55:Core/Src/execution.c ****   if(joy_vals[1] > 230)move_dist[1] = 10.0;
  56:Core/Src/execution.c ****   else if(joy_vals[1] > 160) move_dist[1] = 1.0;
  57:Core/Src/execution.c ****   else if(joy_vals[1] < 26)move_dist[1] = -10.0;
  58:Core/Src/execution.c ****   else if(joy_vals[1] < 96) move_dist[1] = -1.0;
  59:Core/Src/execution.c ****   else move_dist[1] = 0.0;
  60:Core/Src/execution.c **** 
  61:Core/Src/execution.c ****   //creates the command in the communication tx buffer
  62:Core/Src/execution.c ****   quickMoveCommand(move_dist, comm_h);
  63:Core/Src/execution.c **** 
  64:Core/Src/execution.c ****   //semds the commmand stored in the plotter tx buffer
  65:Core/Src/execution.c ****   plotterSendCommand(comm_h);
  66:Core/Src/execution.c **** 
  67:Core/Src/execution.c ****   //wait until the move is completed
  68:Core/Src/execution.c ****   HAL_Delay(_moveDuration(move_dist));
  69:Core/Src/execution.c **** 
  70:Core/Src/execution.c **** 
  71:Core/Src/execution.c ****   //so far only placeholder that doesn't do anything
  72:Core/Src/execution.c ****   while(plotterMoving(comm_h)){
  73:Core/Src/execution.c ****     HAL_Delay(5);
  74:Core/Src/execution.c ****   };
  75:Core/Src/execution.c ****   
  76:Core/Src/execution.c **** 
  77:Core/Src/execution.c ****   return RETURN_OK;
  78:Core/Src/execution.c **** }
  79:Core/Src/execution.c **** 
  80:Core/Src/execution.c **** /**
ARM GAS  /tmp/cclSMvqi.s 			page 4


  81:Core/Src/execution.c ****  * @brief Returns 0 if plotter is not moving, 1 otherwise
  82:Core/Src/execution.c ****  * @todo Implement the check of plotter state
  83:Core/Src/execution.c ****  * 
  84:Core/Src/execution.c ****  * @param comm_h handle containing the uart communication handle and data buffers
  85:Core/Src/execution.c ****  * @return uint8_t 
  86:Core/Src/execution.c ****  */
  87:Core/Src/execution.c **** uint8_t plotterMoving(comm_data *comm_h){
  94              		.loc 1 87 41 is_stmt 1 view -0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  88:Core/Src/execution.c **** 
  89:Core/Src/execution.c ****   return 0;
  99              		.loc 1 89 3 view .LVU21
  90:Core/Src/execution.c **** }
 100              		.loc 1 90 1 is_stmt 0 view .LVU22
 101 0000 0020     		movs	r0, #0
 102              	.LVL4:
 103              		.loc 1 90 1 view .LVU23
 104 0002 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE68:
 108              		.section	.rodata.quickMoveCommand.str1.4,"aMS",%progbits,1
 109              		.align	2
 110              	.LC1:
 111 0000 47303120 		.ascii	"G01 F\000"
 111      4600
 112 0006 0000     		.align	2
 113              	.LC2:
 114 0008 205800   		.ascii	" X\000"
 115 000b 00       		.align	2
 116              	.LC3:
 117 000c 205900   		.ascii	" Y\000"
 118 000f 00       		.align	2
 119              	.LC4:
 120 0010 0A00     		.ascii	"\012\000"
 121              		.section	.text.quickMoveCommand,"ax",%progbits
 122              		.align	1
 123              		.global	quickMoveCommand
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu softvfp
 129              	quickMoveCommand:
 130              	.LVL5:
 131              	.LFB69:
  91:Core/Src/execution.c **** 
  92:Core/Src/execution.c **** /**
  93:Core/Src/execution.c ****  * @brief Initiates plottter relative move based on the recieved distances
  94:Core/Src/execution.c ****  * 
  95:Core/Src/execution.c ****  * @param move_dist Vector of [x,y] float distance for the plotter to move by
  96:Core/Src/execution.c ****  * @param comm_h handle containing the uart communication handle and data buffers 
  97:Core/Src/execution.c ****  * @return uint8_t RETURN_OK
  98:Core/Src/execution.c ****  */
  99:Core/Src/execution.c **** uint8_t quickMoveCommand(float *move_dist, comm_data *comm_h){
 132              		.loc 1 99 62 is_stmt 1 view -0
ARM GAS  /tmp/cclSMvqi.s 			page 5


 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 24
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		.loc 1 99 62 is_stmt 0 view .LVU25
 137 0000 70B5     		push	{r4, r5, r6, lr}
 138              		.cfi_def_cfa_offset 16
 139              		.cfi_offset 4, -16
 140              		.cfi_offset 5, -12
 141              		.cfi_offset 6, -8
 142              		.cfi_offset 14, -4
 143 0002 86B0     		sub	sp, sp, #24
 144              		.cfi_def_cfa_offset 40
 145 0004 0646     		mov	r6, r0
 146 0006 0C46     		mov	r4, r1
 100:Core/Src/execution.c ****   char x_dist[8], y_dist[8], feed[8] = {0};
 147              		.loc 1 100 3 is_stmt 1 view .LVU26
 148              		.loc 1 100 30 is_stmt 0 view .LVU27
 149 0008 0025     		movs	r5, #0
 150 000a 0095     		str	r5, [sp]
 151 000c 0195     		str	r5, [sp, #4]
 101:Core/Src/execution.c **** 
 102:Core/Src/execution.c ****   floatToChar(move_dist[0],x_dist);
 152              		.loc 1 102 3 is_stmt 1 view .LVU28
 153 000e 04A9     		add	r1, sp, #16
 154              	.LVL6:
 155              		.loc 1 102 3 is_stmt 0 view .LVU29
 156 0010 0068     		ldr	r0, [r0]	@ float
 157              	.LVL7:
 158              		.loc 1 102 3 view .LVU30
 159 0012 FFF7FEFF 		bl	floatToChar
 160              	.LVL8:
 103:Core/Src/execution.c ****   floatToChar(move_dist[1],y_dist);
 161              		.loc 1 103 3 is_stmt 1 view .LVU31
 162 0016 02A9     		add	r1, sp, #8
 163 0018 7068     		ldr	r0, [r6, #4]	@ float
 164 001a FFF7FEFF 		bl	floatToChar
 165              	.LVL9:
 104:Core/Src/execution.c ****   floatToChar(FEEDRATE, feed);
 166              		.loc 1 104 3 view .LVU32
 167 001e 6946     		mov	r1, sp
 168 0020 1D48     		ldr	r0, .L8
 169 0022 FFF7FEFF 		bl	floatToChar
 170              	.LVL10:
 105:Core/Src/execution.c **** 
 106:Core/Src/execution.c ****   memset(comm_h->plotter_tx,0,TX_BUFF_SIZE);
 171              		.loc 1 106 3 view .LVU33
 172              		.loc 1 106 16 is_stmt 0 view .LVU34
 173 0026 04F20714 		addw	r4, r4, #263
 174              	.LVL11:
 175              		.loc 1 106 3 view .LVU35
 176 002a FF22     		movs	r2, #255
 177 002c 2946     		mov	r1, r5
 178 002e 2046     		mov	r0, r4
 179 0030 FFF7FEFF 		bl	memset
 180              	.LVL12:
 107:Core/Src/execution.c **** 
 108:Core/Src/execution.c ****   strcat(comm_h->plotter_tx,"G01 F");
ARM GAS  /tmp/cclSMvqi.s 			page 6


 181              		.loc 1 108 3 is_stmt 1 view .LVU36
 182 0034 2046     		mov	r0, r4
 183 0036 FFF7FEFF 		bl	strlen
 184              	.LVL13:
 185 003a 0346     		mov	r3, r0
 186 003c 2118     		adds	r1, r4, r0
 187 003e 174A     		ldr	r2, .L8+4
 188 0040 1068     		ldr	r0, [r2]
 189 0042 E050     		str	r0, [r4, r3]	@ unaligned
 190 0044 9388     		ldrh	r3, [r2, #4]	@ unaligned
 191 0046 8B80     		strh	r3, [r1, #4]	@ unaligned
 109:Core/Src/execution.c ****   strcat(comm_h->plotter_tx, feed);
 192              		.loc 1 109 3 view .LVU37
 193 0048 6946     		mov	r1, sp
 194 004a 2046     		mov	r0, r4
 195 004c FFF7FEFF 		bl	strcat
 196              	.LVL14:
 110:Core/Src/execution.c ****   strcat(comm_h->plotter_tx, " X");
 197              		.loc 1 110 3 view .LVU38
 198 0050 2046     		mov	r0, r4
 199 0052 FFF7FEFF 		bl	strlen
 200              	.LVL15:
 201 0056 2218     		adds	r2, r4, r0
 202 0058 114B     		ldr	r3, .L8+8
 203 005a 1988     		ldrh	r1, [r3]	@ unaligned
 204 005c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 205 005e 2152     		strh	r1, [r4, r0]	@ unaligned
 206 0060 9370     		strb	r3, [r2, #2]
 111:Core/Src/execution.c ****   strcat(comm_h->plotter_tx, x_dist);
 207              		.loc 1 111 3 view .LVU39
 208 0062 04A9     		add	r1, sp, #16
 209 0064 2046     		mov	r0, r4
 210 0066 FFF7FEFF 		bl	strcat
 211              	.LVL16:
 112:Core/Src/execution.c ****   strcat(comm_h->plotter_tx," Y");
 212              		.loc 1 112 3 view .LVU40
 213 006a 2046     		mov	r0, r4
 214 006c FFF7FEFF 		bl	strlen
 215              	.LVL17:
 216 0070 2218     		adds	r2, r4, r0
 217 0072 0C4B     		ldr	r3, .L8+12
 218 0074 1988     		ldrh	r1, [r3]	@ unaligned
 219 0076 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 220 0078 2152     		strh	r1, [r4, r0]	@ unaligned
 221 007a 9370     		strb	r3, [r2, #2]
 113:Core/Src/execution.c ****   strcat(comm_h->plotter_tx, y_dist);
 222              		.loc 1 113 3 view .LVU41
 223 007c 02A9     		add	r1, sp, #8
 224 007e 2046     		mov	r0, r4
 225 0080 FFF7FEFF 		bl	strcat
 226              	.LVL18:
 114:Core/Src/execution.c ****   strcat(comm_h->plotter_tx,"\n");
 227              		.loc 1 114 3 view .LVU42
 228 0084 2046     		mov	r0, r4
 229 0086 FFF7FEFF 		bl	strlen
 230              	.LVL19:
 231 008a 074B     		ldr	r3, .L8+16
ARM GAS  /tmp/cclSMvqi.s 			page 7


 232 008c 1B88     		ldrh	r3, [r3]	@ unaligned
 233 008e 2352     		strh	r3, [r4, r0]	@ unaligned
 115:Core/Src/execution.c **** 
 116:Core/Src/execution.c ****   return RETURN_OK;
 234              		.loc 1 116 3 view .LVU43
 117:Core/Src/execution.c **** }
 235              		.loc 1 117 1 is_stmt 0 view .LVU44
 236 0090 2846     		mov	r0, r5
 237 0092 06B0     		add	sp, sp, #24
 238              		.cfi_def_cfa_offset 16
 239              		@ sp needed
 240 0094 70BD     		pop	{r4, r5, r6, pc}
 241              	.LVL20:
 242              	.L9:
 243              		.loc 1 117 1 view .LVU45
 244 0096 00BF     		.align	2
 245              	.L8:
 246 0098 00007A44 		.word	1148846080
 247 009c 00000000 		.word	.LC1
 248 00a0 08000000 		.word	.LC2
 249 00a4 0C000000 		.word	.LC3
 250 00a8 10000000 		.word	.LC4
 251              		.cfi_endproc
 252              	.LFE69:
 254              		.section	.text.plotterSendCommand,"ax",%progbits
 255              		.align	1
 256              		.global	plotterSendCommand
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu softvfp
 262              	plotterSendCommand:
 263              	.LVL21:
 264              	.LFB70:
 118:Core/Src/execution.c **** 
 119:Core/Src/execution.c **** 
 120:Core/Src/execution.c **** uint8_t plotterSendCommand(comm_data *comm_h){
 265              		.loc 1 120 46 is_stmt 1 view -0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		.loc 1 120 46 is_stmt 0 view .LVU47
 270 0000 08B5     		push	{r3, lr}
 271              		.cfi_def_cfa_offset 8
 272              		.cfi_offset 3, -8
 273              		.cfi_offset 14, -4
 121:Core/Src/execution.c ****   return uartSendData(comm_h->plotter_handle, comm_h->plotter_tx);
 274              		.loc 1 121 3 is_stmt 1 view .LVU48
 275              		.loc 1 121 10 is_stmt 0 view .LVU49
 276 0002 00F20711 		addw	r1, r0, #263
 277 0006 0068     		ldr	r0, [r0]
 278              	.LVL22:
 279              		.loc 1 121 10 view .LVU50
 280 0008 FFF7FEFF 		bl	uartSendData
 281              	.LVL23:
 122:Core/Src/execution.c **** };
 282              		.loc 1 122 1 view .LVU51
ARM GAS  /tmp/cclSMvqi.s 			page 8


 283 000c 08BD     		pop	{r3, pc}
 284              		.cfi_endproc
 285              	.LFE70:
 287              		.section	.text.plotterGetCommand,"ax",%progbits
 288              		.align	1
 289              		.global	plotterGetCommand
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 293              		.fpu softvfp
 295              	plotterGetCommand:
 296              	.LVL24:
 297              	.LFB71:
 123:Core/Src/execution.c **** 
 124:Core/Src/execution.c **** uint8_t plotterGetCommand(comm_data *comm_h){
 298              		.loc 1 124 45 is_stmt 1 view -0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		.loc 1 124 45 is_stmt 0 view .LVU53
 303 0000 08B5     		push	{r3, lr}
 304              		.cfi_def_cfa_offset 8
 305              		.cfi_offset 3, -8
 306              		.cfi_offset 14, -4
 125:Core/Src/execution.c ****   return uartGetData(comm_h->plotter_handle, comm_h->plotter_rx);
 307              		.loc 1 125 3 is_stmt 1 view .LVU54
 308              		.loc 1 125 52 is_stmt 0 view .LVU55
 309 0002 0146     		mov	r1, r0
 310              		.loc 1 125 10 view .LVU56
 311 0004 51F8080B 		ldr	r0, [r1], #8
 312              	.LVL25:
 313              		.loc 1 125 10 view .LVU57
 314 0008 FFF7FEFF 		bl	uartGetData
 315              	.LVL26:
 126:Core/Src/execution.c **** }
 316              		.loc 1 126 1 view .LVU58
 317 000c 08BD     		pop	{r3, pc}
 318              		.cfi_endproc
 319              	.LFE71:
 321              		.global	__aeabi_fcmpeq
 322              		.section	.text._moveDuration,"ax",%progbits
 323              		.align	1
 324              		.global	_moveDuration
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 328              		.fpu softvfp
 330              	_moveDuration:
 331              	.LVL27:
 332              	.LFB72:
 127:Core/Src/execution.c **** 
 128:Core/Src/execution.c **** 
 129:Core/Src/execution.c **** uint32_t _moveDuration(float *move_dist){
 333              		.loc 1 129 41 is_stmt 1 view -0
 334              		.cfi_startproc
 335              		@ args = 0, pretend = 0, frame = 0
 336              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cclSMvqi.s 			page 9


 337              		.loc 1 129 41 is_stmt 0 view .LVU60
 338 0000 38B5     		push	{r3, r4, r5, lr}
 339              		.cfi_def_cfa_offset 16
 340              		.cfi_offset 3, -16
 341              		.cfi_offset 4, -12
 342              		.cfi_offset 5, -8
 343              		.cfi_offset 14, -4
 344 0002 0446     		mov	r4, r0
 130:Core/Src/execution.c ****   if(move_dist[0] == 0.0 && move_dist[1] == 0.0)return 0;
 345              		.loc 1 130 3 is_stmt 1 view .LVU61
 346              		.loc 1 130 15 is_stmt 0 view .LVU62
 347 0004 0568     		ldr	r5, [r0]	@ float
 348              		.loc 1 130 5 view .LVU63
 349 0006 0021     		movs	r1, #0
 350 0008 2846     		mov	r0, r5
 351              	.LVL28:
 352              		.loc 1 130 5 view .LVU64
 353 000a FFF7FEFF 		bl	__aeabi_fcmpeq
 354              	.LVL29:
 355 000e 28B1     		cbz	r0, .L15
 356              		.loc 1 130 26 discriminator 1 view .LVU65
 357 0010 0021     		movs	r1, #0
 358 0012 6068     		ldr	r0, [r4, #4]	@ float
 359 0014 FFF7FEFF 		bl	__aeabi_fcmpeq
 360              	.LVL30:
 361 0018 0028     		cmp	r0, #0
 362 001a 44D1     		bne	.L29
 363              	.L15:
 131:Core/Src/execution.c ****   else if(move_dist[0] == 0.0 && move_dist[1] == 10.0 || 
 364              		.loc 1 131 8 is_stmt 1 view .LVU66
 365              		.loc 1 131 10 is_stmt 0 view .LVU67
 366 001c 0021     		movs	r1, #0
 367 001e 2846     		mov	r0, r5
 368 0020 FFF7FEFF 		bl	__aeabi_fcmpeq
 369              	.LVL31:
 370 0024 28B1     		cbz	r0, .L18
 371              		.loc 1 131 31 discriminator 1 view .LVU68
 372 0026 2A49     		ldr	r1, .L46
 373 0028 6068     		ldr	r0, [r4, #4]	@ float
 374 002a FFF7FEFF 		bl	__aeabi_fcmpeq
 375              	.LVL32:
 376 002e 0028     		cmp	r0, #0
 377 0030 3BD1     		bne	.L30
 378              	.L18:
 132:Core/Src/execution.c ****           move_dist[1] == 0.0 && move_dist[0] == 10.0 ){
 379              		.loc 1 132 20 discriminator 3 view .LVU69
 380 0032 6468     		ldr	r4, [r4, #4]	@ float
 381              	.LVL33:
 131:Core/Src/execution.c ****   else if(move_dist[0] == 0.0 && move_dist[1] == 10.0 || 
 382              		.loc 1 131 55 discriminator 3 view .LVU70
 383 0034 0021     		movs	r1, #0
 384 0036 2046     		mov	r0, r4
 385 0038 FFF7FEFF 		bl	__aeabi_fcmpeq
 386              	.LVL34:
 387 003c 20B1     		cbz	r0, .L20
 388              		.loc 1 132 31 view .LVU71
 389 003e 2449     		ldr	r1, .L46
ARM GAS  /tmp/cclSMvqi.s 			page 10


 390 0040 2846     		mov	r0, r5
 391 0042 FFF7FEFF 		bl	__aeabi_fcmpeq
 392              	.LVL35:
 393 0046 98BB     		cbnz	r0, .L31
 394              	.L20:
 133:Core/Src/execution.c ****     return (uint32_t) 10.0/(FEEDRATE_MS);
 134:Core/Src/execution.c ****   }
 135:Core/Src/execution.c ****   else if(move_dist[0] == 0.0 && move_dist[1] == 1.0 || 
 395              		.loc 1 135 8 is_stmt 1 view .LVU72
 396              		.loc 1 135 10 is_stmt 0 view .LVU73
 397 0048 0021     		movs	r1, #0
 398 004a 2846     		mov	r0, r5
 399 004c FFF7FEFF 		bl	__aeabi_fcmpeq
 400              	.LVL36:
 401 0050 28B1     		cbz	r0, .L22
 402              		.loc 1 135 31 discriminator 1 view .LVU74
 403 0052 4FF07E51 		mov	r1, #1065353216
 404 0056 2046     		mov	r0, r4
 405 0058 FFF7FEFF 		bl	__aeabi_fcmpeq
 406              	.LVL37:
 407 005c 58BB     		cbnz	r0, .L32
 408              	.L22:
 409              		.loc 1 135 54 discriminator 3 view .LVU75
 410 005e 0021     		movs	r1, #0
 411 0060 2046     		mov	r0, r4
 412 0062 FFF7FEFF 		bl	__aeabi_fcmpeq
 413              	.LVL38:
 414 0066 28B1     		cbz	r0, .L24
 136:Core/Src/execution.c ****           move_dist[1] == 0.0 && move_dist[0] == 1.0 ){
 415              		.loc 1 136 31 view .LVU76
 416 0068 4FF07E51 		mov	r1, #1065353216
 417 006c 2846     		mov	r0, r5
 418 006e FFF7FEFF 		bl	__aeabi_fcmpeq
 419              	.LVL39:
 420 0072 10BB     		cbnz	r0, .L33
 421              	.L24:
 137:Core/Src/execution.c ****     return (uint32_t) 1.0/(FEEDRATE_MS);
 138:Core/Src/execution.c ****   }
 139:Core/Src/execution.c ****   else if(move_dist[0] == 1.0 && move_dist[1] == 10.0 || 
 422              		.loc 1 139 8 is_stmt 1 view .LVU77
 423              		.loc 1 139 10 is_stmt 0 view .LVU78
 424 0074 4FF07E51 		mov	r1, #1065353216
 425 0078 2846     		mov	r0, r5
 426 007a FFF7FEFF 		bl	__aeabi_fcmpeq
 427              	.LVL40:
 428 007e 20B1     		cbz	r0, .L26
 429              		.loc 1 139 31 discriminator 1 view .LVU79
 430 0080 1349     		ldr	r1, .L46
 431 0082 2046     		mov	r0, r4
 432 0084 FFF7FEFF 		bl	__aeabi_fcmpeq
 433              	.LVL41:
 434 0088 C8B9     		cbnz	r0, .L34
 435              	.L26:
 436              		.loc 1 139 55 discriminator 3 view .LVU80
 437 008a 4FF07E51 		mov	r1, #1065353216
 438 008e 2046     		mov	r0, r4
 439 0090 FFF7FEFF 		bl	__aeabi_fcmpeq
ARM GAS  /tmp/cclSMvqi.s 			page 11


 440              	.LVL42:
 441 0094 B0B1     		cbz	r0, .L44
 140:Core/Src/execution.c ****           move_dist[1] == 1.0 && move_dist[0] == 10.0 ){
 442              		.loc 1 140 31 view .LVU81
 443 0096 0E49     		ldr	r1, .L46
 444 0098 2846     		mov	r0, r5
 445 009a FFF7FEFF 		bl	__aeabi_fcmpeq
 446              	.LVL43:
 447 009e A0B9     		cbnz	r0, .L36
 141:Core/Src/execution.c ****     return (uint32_t) 11.0/(FEEDRATE_MS);
 142:Core/Src/execution.c ****   }
 143:Core/Src/execution.c ****   else{
 144:Core/Src/execution.c ****     return (uint32_t) 15.0/(FEEDRATE_MS);
 448              		.loc 1 144 27 view .LVU82
 449 00a0 4FF46170 		mov	r0, #900
 450              	.L14:
 145:Core/Src/execution.c ****   }
 146:Core/Src/execution.c **** }...
 451              		.loc 1 146 1 view .LVU83
 452 00a4 38BD     		pop	{r3, r4, r5, pc}
 453              	.LVL44:
 454              	.L29:
 130:Core/Src/execution.c ****   if(move_dist[0] == 0.0 && move_dist[1] == 0.0)return 0;
 455              		.loc 1 130 56 view .LVU84
 456 00a6 0020     		movs	r0, #0
 457 00a8 FCE7     		b	.L14
 458              	.L30:
 133:Core/Src/execution.c ****     return (uint32_t) 10.0/(FEEDRATE_MS);
 459              		.loc 1 133 27 view .LVU85
 460 00aa 4FF41670 		mov	r0, #600
 461 00ae F9E7     		b	.L14
 462              	.LVL45:
 463              	.L31:
 133:Core/Src/execution.c ****     return (uint32_t) 10.0/(FEEDRATE_MS);
 464              		.loc 1 133 27 view .LVU86
 465 00b0 4FF41670 		mov	r0, #600
 466 00b4 F6E7     		b	.L14
 467              	.L32:
 137:Core/Src/execution.c ****     return (uint32_t) 1.0/(FEEDRATE_MS);
 468              		.loc 1 137 26 view .LVU87
 469 00b6 3C20     		movs	r0, #60
 470 00b8 F4E7     		b	.L14
 471              	.L33:
 472 00ba 3C20     		movs	r0, #60
 473 00bc F2E7     		b	.L14
 474              	.L34:
 141:Core/Src/execution.c ****     return (uint32_t) 11.0/(FEEDRATE_MS);
 475              		.loc 1 141 27 view .LVU88
 476 00be 4FF42570 		mov	r0, #660
 477 00c2 EFE7     		b	.L14
 478              	.L44:
 144:Core/Src/execution.c ****     return (uint32_t) 15.0/(FEEDRATE_MS);
 479              		.loc 1 144 27 view .LVU89
 480 00c4 4FF46170 		mov	r0, #900
 481 00c8 ECE7     		b	.L14
 482              	.L36:
 141:Core/Src/execution.c ****     return (uint32_t) 11.0/(FEEDRATE_MS);
ARM GAS  /tmp/cclSMvqi.s 			page 12


 483              		.loc 1 141 27 view .LVU90
 484 00ca 4FF42570 		mov	r0, #660
 485 00ce E9E7     		b	.L14
 486              	.L47:
 487              		.align	2
 488              	.L46:
 489 00d0 00002041 		.word	1092616192
 490              		.cfi_endproc
 491              	.LFE72:
 493              		.section	.text.manualControl,"ax",%progbits
 494              		.align	1
 495              		.global	manualControl
 496              		.syntax unified
 497              		.thumb
 498              		.thumb_func
 499              		.fpu softvfp
 501              	manualControl:
 502              	.LVL46:
 503              	.LFB67:
  46:Core/Src/execution.c **** uint8_t manualControl(uint8_t *joy_vals, setup_data *setup_data_h, comm_data *comm_h){
 504              		.loc 1 46 86 is_stmt 1 view -0
 505              		.cfi_startproc
 506              		@ args = 0, pretend = 0, frame = 8
 507              		@ frame_needed = 0, uses_anonymous_args = 0
  46:Core/Src/execution.c **** uint8_t manualControl(uint8_t *joy_vals, setup_data *setup_data_h, comm_data *comm_h){
 508              		.loc 1 46 86 is_stmt 0 view .LVU92
 509 0000 10B5     		push	{r4, lr}
 510              		.cfi_def_cfa_offset 8
 511              		.cfi_offset 4, -8
 512              		.cfi_offset 14, -4
 513 0002 82B0     		sub	sp, sp, #8
 514              		.cfi_def_cfa_offset 16
 515 0004 1446     		mov	r4, r2
  47:Core/Src/execution.c ****   float move_dist[2] = {0.0};
 516              		.loc 1 47 3 is_stmt 1 view .LVU93
  47:Core/Src/execution.c ****   float move_dist[2] = {0.0};
 517              		.loc 1 47 9 is_stmt 0 view .LVU94
 518 0006 0023     		movs	r3, #0
 519 0008 0093     		str	r3, [sp]
 520 000a 0193     		str	r3, [sp, #4]
  49:Core/Src/execution.c ****   if(joy_vals[0] > 230)move_dist[0] = 10.0;
 521              		.loc 1 49 3 is_stmt 1 view .LVU95
  49:Core/Src/execution.c ****   if(joy_vals[0] > 230)move_dist[0] = 10.0;
 522              		.loc 1 49 14 is_stmt 0 view .LVU96
 523 000c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
  49:Core/Src/execution.c ****   if(joy_vals[0] > 230)move_dist[0] = 10.0;
 524              		.loc 1 49 5 view .LVU97
 525 000e E62B     		cmp	r3, #230
 526 0010 13D9     		bls	.L49
  49:Core/Src/execution.c ****   if(joy_vals[0] > 230)move_dist[0] = 10.0;
 527              		.loc 1 49 24 is_stmt 1 discriminator 1 view .LVU98
  49:Core/Src/execution.c ****   if(joy_vals[0] > 230)move_dist[0] = 10.0;
 528              		.loc 1 49 37 is_stmt 0 discriminator 1 view .LVU99
 529 0012 1F4B     		ldr	r3, .L60
 530 0014 0093     		str	r3, [sp]	@ float
 531              	.L50:
  55:Core/Src/execution.c ****   if(joy_vals[1] > 230)move_dist[1] = 10.0;
ARM GAS  /tmp/cclSMvqi.s 			page 13


 532              		.loc 1 55 3 is_stmt 1 view .LVU100
  55:Core/Src/execution.c ****   if(joy_vals[1] > 230)move_dist[1] = 10.0;
 533              		.loc 1 55 14 is_stmt 0 view .LVU101
 534 0016 4378     		ldrb	r3, [r0, #1]	@ zero_extendqisi2
  55:Core/Src/execution.c ****   if(joy_vals[1] > 230)move_dist[1] = 10.0;
 535              		.loc 1 55 5 view .LVU102
 536 0018 E62B     		cmp	r3, #230
 537 001a 1ED9     		bls	.L53
  55:Core/Src/execution.c ****   if(joy_vals[1] > 230)move_dist[1] = 10.0;
 538              		.loc 1 55 24 is_stmt 1 discriminator 1 view .LVU103
  55:Core/Src/execution.c ****   if(joy_vals[1] > 230)move_dist[1] = 10.0;
 539              		.loc 1 55 37 is_stmt 0 discriminator 1 view .LVU104
 540 001c 1C4B     		ldr	r3, .L60
 541 001e 0193     		str	r3, [sp, #4]	@ float
 542              	.L54:
  62:Core/Src/execution.c ****   quickMoveCommand(move_dist, comm_h);
 543              		.loc 1 62 3 is_stmt 1 view .LVU105
 544 0020 2146     		mov	r1, r4
 545              	.LVL47:
  62:Core/Src/execution.c ****   quickMoveCommand(move_dist, comm_h);
 546              		.loc 1 62 3 is_stmt 0 view .LVU106
 547 0022 6846     		mov	r0, sp
 548              	.LVL48:
  62:Core/Src/execution.c ****   quickMoveCommand(move_dist, comm_h);
 549              		.loc 1 62 3 view .LVU107
 550 0024 FFF7FEFF 		bl	quickMoveCommand
 551              	.LVL49:
  65:Core/Src/execution.c ****   plotterSendCommand(comm_h);
 552              		.loc 1 65 3 is_stmt 1 view .LVU108
 553 0028 2046     		mov	r0, r4
 554 002a FFF7FEFF 		bl	plotterSendCommand
 555              	.LVL50:
  68:Core/Src/execution.c ****   HAL_Delay(_moveDuration(move_dist));
 556              		.loc 1 68 3 view .LVU109
 557 002e 6846     		mov	r0, sp
 558 0030 FFF7FEFF 		bl	_moveDuration
 559              	.LVL51:
 560 0034 FFF7FEFF 		bl	HAL_Delay
 561              	.LVL52:
  72:Core/Src/execution.c ****   while(plotterMoving(comm_h)){
 562              		.loc 1 72 3 view .LVU110
  72:Core/Src/execution.c ****   while(plotterMoving(comm_h)){
 563              		.loc 1 72 8 is_stmt 0 view .LVU111
 564 0038 22E0     		b	.L57
 565              	.LVL53:
 566              	.L49:
  50:Core/Src/execution.c ****   else if(joy_vals[0] > 160) move_dist[0] = 1.0;
 567              		.loc 1 50 8 is_stmt 1 view .LVU112
  50:Core/Src/execution.c ****   else if(joy_vals[0] > 160) move_dist[0] = 1.0;
 568              		.loc 1 50 10 is_stmt 0 view .LVU113
 569 003a A02B     		cmp	r3, #160
 570 003c 03D9     		bls	.L51
  50:Core/Src/execution.c ****   else if(joy_vals[0] > 160) move_dist[0] = 1.0;
 571              		.loc 1 50 30 is_stmt 1 discriminator 1 view .LVU114
  50:Core/Src/execution.c ****   else if(joy_vals[0] > 160) move_dist[0] = 1.0;
 572              		.loc 1 50 43 is_stmt 0 discriminator 1 view .LVU115
 573 003e 4FF07E53 		mov	r3, #1065353216
ARM GAS  /tmp/cclSMvqi.s 			page 14


 574 0042 0093     		str	r3, [sp]	@ float
 575 0044 E7E7     		b	.L50
 576              	.L51:
  51:Core/Src/execution.c ****   else if(joy_vals[0] < 26)move_dist[0] = -10.0;
 577              		.loc 1 51 8 is_stmt 1 view .LVU116
  51:Core/Src/execution.c ****   else if(joy_vals[0] < 26)move_dist[0] = -10.0;
 578              		.loc 1 51 10 is_stmt 0 view .LVU117
 579 0046 192B     		cmp	r3, #25
 580 0048 02D8     		bhi	.L52
  51:Core/Src/execution.c ****   else if(joy_vals[0] < 26)move_dist[0] = -10.0;
 581              		.loc 1 51 28 is_stmt 1 discriminator 1 view .LVU118
  51:Core/Src/execution.c ****   else if(joy_vals[0] < 26)move_dist[0] = -10.0;
 582              		.loc 1 51 41 is_stmt 0 discriminator 1 view .LVU119
 583 004a 124B     		ldr	r3, .L60+4
 584 004c 0093     		str	r3, [sp]	@ float
 585 004e E2E7     		b	.L50
 586              	.L52:
  52:Core/Src/execution.c ****   else if(joy_vals[0] < 96) move_dist[0] = -1.0;
 587              		.loc 1 52 8 is_stmt 1 view .LVU120
  52:Core/Src/execution.c ****   else if(joy_vals[0] < 96) move_dist[0] = -1.0;
 588              		.loc 1 52 10 is_stmt 0 view .LVU121
 589 0050 5F2B     		cmp	r3, #95
 590 0052 E0D8     		bhi	.L50
  52:Core/Src/execution.c ****   else if(joy_vals[0] < 96) move_dist[0] = -1.0;
 591              		.loc 1 52 29 is_stmt 1 discriminator 1 view .LVU122
  52:Core/Src/execution.c ****   else if(joy_vals[0] < 96) move_dist[0] = -1.0;
 592              		.loc 1 52 42 is_stmt 0 discriminator 1 view .LVU123
 593 0054 104B     		ldr	r3, .L60+8
 594 0056 0093     		str	r3, [sp]	@ float
 595 0058 DDE7     		b	.L50
 596              	.L53:
  56:Core/Src/execution.c ****   else if(joy_vals[1] > 160) move_dist[1] = 1.0;
 597              		.loc 1 56 8 is_stmt 1 view .LVU124
  56:Core/Src/execution.c ****   else if(joy_vals[1] > 160) move_dist[1] = 1.0;
 598              		.loc 1 56 10 is_stmt 0 view .LVU125
 599 005a A02B     		cmp	r3, #160
 600 005c 03D9     		bls	.L55
  56:Core/Src/execution.c ****   else if(joy_vals[1] > 160) move_dist[1] = 1.0;
 601              		.loc 1 56 30 is_stmt 1 discriminator 1 view .LVU126
  56:Core/Src/execution.c ****   else if(joy_vals[1] > 160) move_dist[1] = 1.0;
 602              		.loc 1 56 43 is_stmt 0 discriminator 1 view .LVU127
 603 005e 4FF07E53 		mov	r3, #1065353216
 604 0062 0193     		str	r3, [sp, #4]	@ float
 605 0064 DCE7     		b	.L54
 606              	.L55:
  57:Core/Src/execution.c ****   else if(joy_vals[1] < 26)move_dist[1] = -10.0;
 607              		.loc 1 57 8 is_stmt 1 view .LVU128
  57:Core/Src/execution.c ****   else if(joy_vals[1] < 26)move_dist[1] = -10.0;
 608              		.loc 1 57 10 is_stmt 0 view .LVU129
 609 0066 192B     		cmp	r3, #25
 610 0068 02D8     		bhi	.L56
  57:Core/Src/execution.c ****   else if(joy_vals[1] < 26)move_dist[1] = -10.0;
 611              		.loc 1 57 28 is_stmt 1 discriminator 1 view .LVU130
  57:Core/Src/execution.c ****   else if(joy_vals[1] < 26)move_dist[1] = -10.0;
 612              		.loc 1 57 41 is_stmt 0 discriminator 1 view .LVU131
 613 006a 0A4B     		ldr	r3, .L60+4
 614 006c 0193     		str	r3, [sp, #4]	@ float
ARM GAS  /tmp/cclSMvqi.s 			page 15


 615 006e D7E7     		b	.L54
 616              	.L56:
  58:Core/Src/execution.c ****   else if(joy_vals[1] < 96) move_dist[1] = -1.0;
 617              		.loc 1 58 8 is_stmt 1 view .LVU132
  58:Core/Src/execution.c ****   else if(joy_vals[1] < 96) move_dist[1] = -1.0;
 618              		.loc 1 58 10 is_stmt 0 view .LVU133
 619 0070 5F2B     		cmp	r3, #95
 620 0072 D5D8     		bhi	.L54
  58:Core/Src/execution.c ****   else if(joy_vals[1] < 96) move_dist[1] = -1.0;
 621              		.loc 1 58 29 is_stmt 1 discriminator 1 view .LVU134
  58:Core/Src/execution.c ****   else if(joy_vals[1] < 96) move_dist[1] = -1.0;
 622              		.loc 1 58 42 is_stmt 0 discriminator 1 view .LVU135
 623 0074 084B     		ldr	r3, .L60+8
 624 0076 0193     		str	r3, [sp, #4]	@ float
 625 0078 D2E7     		b	.L54
 626              	.LVL54:
 627              	.L58:
  73:Core/Src/execution.c ****     HAL_Delay(5);
 628              		.loc 1 73 5 is_stmt 1 view .LVU136
 629 007a 0520     		movs	r0, #5
 630 007c FFF7FEFF 		bl	HAL_Delay
 631              	.LVL55:
 632              	.L57:
  72:Core/Src/execution.c ****   while(plotterMoving(comm_h)){
 633              		.loc 1 72 8 view .LVU137
  72:Core/Src/execution.c ****   while(plotterMoving(comm_h)){
 634              		.loc 1 72 9 is_stmt 0 view .LVU138
 635 0080 2046     		mov	r0, r4
 636 0082 FFF7FEFF 		bl	plotterMoving
 637              	.LVL56:
  72:Core/Src/execution.c ****   while(plotterMoving(comm_h)){
 638              		.loc 1 72 8 view .LVU139
 639 0086 0028     		cmp	r0, #0
 640 0088 F7D1     		bne	.L58
  74:Core/Src/execution.c ****   };
 641              		.loc 1 74 4 is_stmt 1 view .LVU140
  77:Core/Src/execution.c ****   return RETURN_OK;
 642              		.loc 1 77 3 view .LVU141
  78:Core/Src/execution.c **** }
 643              		.loc 1 78 1 is_stmt 0 view .LVU142
 644 008a 02B0     		add	sp, sp, #8
 645              		.cfi_def_cfa_offset 8
 646              		@ sp needed
 647 008c 10BD     		pop	{r4, pc}
 648              	.LVL57:
 649              	.L61:
  78:Core/Src/execution.c **** }
 650              		.loc 1 78 1 view .LVU143
 651 008e 00BF     		.align	2
 652              	.L60:
 653 0090 00002041 		.word	1092616192
 654 0094 000020C1 		.word	-1054867456
 655 0098 000080BF 		.word	-1082130432
 656              		.cfi_endproc
 657              	.LFE67:
 659              		.text
 660              	.Letext0:
ARM GAS  /tmp/cclSMvqi.s 			page 16


 661              		.file 2 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 662              		.file 3 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 663              		.file 4 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 664              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 665              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 666              		.file 7 "Core/Inc/main.h"
 667              		.file 8 "Core/Inc/utils.h"
 668              		.file 9 "<built-in>"
 669              		.file 10 "/usr/include/newlib/string.h"
 670              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/cclSMvqi.s 			page 17


DEFINED SYMBOLS
                            *ABS*:0000000000000000 execution.c
     /tmp/cclSMvqi.s:16     .rodata.initSetupData.str1.4:0000000000000000 $d
     /tmp/cclSMvqi.s:20     .text.initSetupData:0000000000000000 $t
     /tmp/cclSMvqi.s:28     .text.initSetupData:0000000000000000 initSetupData
     /tmp/cclSMvqi.s:79     .text.initSetupData:0000000000000024 $d
     /tmp/cclSMvqi.s:84     .text.plotterMoving:0000000000000000 $t
     /tmp/cclSMvqi.s:91     .text.plotterMoving:0000000000000000 plotterMoving
     /tmp/cclSMvqi.s:109    .rodata.quickMoveCommand.str1.4:0000000000000000 $d
     /tmp/cclSMvqi.s:122    .text.quickMoveCommand:0000000000000000 $t
     /tmp/cclSMvqi.s:129    .text.quickMoveCommand:0000000000000000 quickMoveCommand
     /tmp/cclSMvqi.s:246    .text.quickMoveCommand:0000000000000098 $d
     /tmp/cclSMvqi.s:255    .text.plotterSendCommand:0000000000000000 $t
     /tmp/cclSMvqi.s:262    .text.plotterSendCommand:0000000000000000 plotterSendCommand
     /tmp/cclSMvqi.s:288    .text.plotterGetCommand:0000000000000000 $t
     /tmp/cclSMvqi.s:295    .text.plotterGetCommand:0000000000000000 plotterGetCommand
     /tmp/cclSMvqi.s:323    .text._moveDuration:0000000000000000 $t
     /tmp/cclSMvqi.s:330    .text._moveDuration:0000000000000000 _moveDuration
     /tmp/cclSMvqi.s:489    .text._moveDuration:00000000000000d0 $d
     /tmp/cclSMvqi.s:494    .text.manualControl:0000000000000000 $t
     /tmp/cclSMvqi.s:501    .text.manualControl:0000000000000000 manualControl
     /tmp/cclSMvqi.s:653    .text.manualControl:0000000000000090 $d

UNDEFINED SYMBOLS
strncpy
floatToChar
memset
strlen
strcat
uartSendData
uartGetData
__aeabi_fcmpeq
HAL_Delay
