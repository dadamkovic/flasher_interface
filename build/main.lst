ARM GAS  /tmp/ccj4zY0r.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.Error_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	Error_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	Error_Handler:
  26              	.LFB67:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "adc.h"
  22:Core/Src/main.c **** #include "spi.h"
  23:Core/Src/main.c **** #include "usart.h"
  24:Core/Src/main.c **** #include "gpio.h"
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  27:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  28:Core/Src/main.c **** #include "joypad.h"
  29:Core/Src/main.c **** #include "menu.h"
  30:Core/Src/main.c **** #include "flash_execution.h"
  31:Core/Src/main.c **** #include "comm_interface.h"
  32:Core/Src/main.c **** 
ARM GAS  /tmp/ccj4zY0r.s 			page 2


  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* USER CODE END Includes */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PTD */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  42:Core/Src/main.c **** /* USER CODE BEGIN PD */
  43:Core/Src/main.c **** /* USER CODE END PD */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  46:Core/Src/main.c **** /* USER CODE BEGIN PM */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PM */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE BEGIN PV */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* USER CODE END PV */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  57:Core/Src/main.c **** void SystemClock_Config(void);
  58:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* USER CODE END PFP */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  63:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** /* USER CODE END 0 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** /**
  68:Core/Src/main.c ****   * @brief  The application entry point.
  69:Core/Src/main.c ****   * @retval int
  70:Core/Src/main.c ****   */
  71:Core/Src/main.c **** int main(void)
  72:Core/Src/main.c **** {
  73:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* USER CODE END 1 */
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  80:Core/Src/main.c ****   HAL_Init();
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE END Init */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* Configure the system clock */
  87:Core/Src/main.c ****   SystemClock_Config();
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
ARM GAS  /tmp/ccj4zY0r.s 			page 3


  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* USER CODE END SysInit */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c ****   /* Initialize all configured peripherals */
  94:Core/Src/main.c ****   MX_GPIO_Init();
  95:Core/Src/main.c ****   MX_ADC1_Init();
  96:Core/Src/main.c ****   MX_USART1_UART_Init();
  97:Core/Src/main.c ****   MX_USART3_UART_Init();
  98:Core/Src/main.c ****   MX_SPI2_Init();
  99:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   uint8_t joypad_vals[2] = {0,0};
 102:Core/Src/main.c ****   struct menu_status menu_handle;
 103:Core/Src/main.c ****   struct setup_data setup_handle;
 104:Core/Src/main.c ****   struct comm_data comm_handle;
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   //draws the initial menu screen
 107:Core/Src/main.c ****   initMenu(&menu_handle);
 108:Core/Src/main.c ****   initSetupData(&setup_handle);
 109:Core/Src/main.c ****   initComms(&comm_handle);
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE END 2 */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* Infinite loop */
 114:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 115:Core/Src/main.c ****   while (1)
 116:Core/Src/main.c ****   {
 117:Core/Src/main.c ****     //fetches values of the joypad 
 118:Core/Src/main.c ****     getJoypadVals(joypad_vals);
 119:Core/Src/main.c ****     //updates the meny screen
 120:Core/Src/main.c ****     serveMenuScreen(&menu_handle, joypad_vals);
 121:Core/Src/main.c ****     //performs function selected on the menu
 122:Core/Src/main.c ****     serveMenuFunc(&menu_handle, joypad_vals, &setup_handle);
 123:Core/Src/main.c ****     //main loop when the machine is flashing parts
 124:Core/Src/main.c ****     if(parseInstruction(&setup_handle, &comm_handle) == RETURN_FAIL){
 125:Core/Src/main.c ****       setup_handle.exec_status = Fail;
 126:Core/Src/main.c ****       break;
 127:Core/Src/main.c ****     }
 128:Core/Src/main.c ****     
 129:Core/Src/main.c ****     if(serveCommunication(&comm_handle) == RETURN_FAIL){
 130:Core/Src/main.c ****       setup_handle.exec_status = Fail;
 131:Core/Src/main.c ****       break;
 132:Core/Src/main.c ****     }
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****     
 135:Core/Src/main.c ****     }
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****     //in case of fail we inform the user of what happened
 138:Core/Src/main.c ****     if(setup_handle.exec_status == Fail){
 139:Core/Src/main.c ****       reportFail(&setup_handle, &comm_handle);
 140:Core/Src/main.c ****     
 141:Core/Src/main.c ****     //for now endless cycle
 142:Core/Src/main.c ****     //TODO: Communication with interface while in error for possible recovery
 143:Core/Src/main.c ****     for(;;){};
 144:Core/Src/main.c **** 
 145:Core/Src/main.c **** 
 146:Core/Src/main.c **** 
ARM GAS  /tmp/ccj4zY0r.s 			page 4


 147:Core/Src/main.c ****     /* USER CODE END WHILE */
 148:Core/Src/main.c **** 
 149:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 150:Core/Src/main.c ****   }
 151:Core/Src/main.c ****   /* USER CODE END 3 */
 152:Core/Src/main.c **** }
 153:Core/Src/main.c **** 
 154:Core/Src/main.c **** /**
 155:Core/Src/main.c ****   * @brief System Clock Configuration
 156:Core/Src/main.c ****   * @retval None
 157:Core/Src/main.c ****   */
 158:Core/Src/main.c **** void SystemClock_Config(void)
 159:Core/Src/main.c **** {
 160:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 161:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 162:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 165:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 168:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 169:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 170:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 174:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 175:Core/Src/main.c ****   {
 176:Core/Src/main.c ****     Error_Handler();
 177:Core/Src/main.c ****   }
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 180:Core/Src/main.c ****   */
 181:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 182:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 183:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 184:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 185:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 186:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 189:Core/Src/main.c ****   {
 190:Core/Src/main.c ****     Error_Handler();
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 193:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 194:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 195:Core/Src/main.c ****   {
 196:Core/Src/main.c ****     Error_Handler();
 197:Core/Src/main.c ****   }
 198:Core/Src/main.c **** }
 199:Core/Src/main.c **** 
 200:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /* USER CODE END 4 */
 203:Core/Src/main.c **** 
ARM GAS  /tmp/ccj4zY0r.s 			page 5


 204:Core/Src/main.c **** /**
 205:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 206:Core/Src/main.c ****   * @retval None
 207:Core/Src/main.c ****   */
 208:Core/Src/main.c **** void Error_Handler(void)
 209:Core/Src/main.c **** {
  27              		.loc 1 209 1 view -0
  28              		.cfi_startproc
  29              		@ Volatile: function does not return.
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 210:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 211:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 212:Core/Src/main.c ****   __disable_irq();
  33              		.loc 1 212 3 view .LVU1
  34              	.LBB4:
  35              	.LBI4:
  36              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccj4zY0r.s 			page 6


  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccj4zY0r.s 			page 7


  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
  37              		.loc 2 140 27 view .LVU2
  38              	.LBB5:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  39              		.loc 2 142 3 view .LVU3
  40              		.syntax unified
  41              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
  42 0000 72B6     		cpsid i
  43              	@ 0 "" 2
  44              		.thumb
  45              		.syntax unified
  46              	.L2:
ARM GAS  /tmp/ccj4zY0r.s 			page 8


  47              	.LBE5:
  48              	.LBE4:
 213:Core/Src/main.c ****   while (1)
  49              		.loc 1 213 3 discriminator 1 view .LVU4
 214:Core/Src/main.c ****   {
 215:Core/Src/main.c ****   }
  50              		.loc 1 215 3 discriminator 1 view .LVU5
 213:Core/Src/main.c ****   while (1)
  51              		.loc 1 213 9 discriminator 1 view .LVU6
  52 0002 FEE7     		b	.L2
  53              		.cfi_endproc
  54              	.LFE67:
  56              		.section	.text.SystemClock_Config,"ax",%progbits
  57              		.align	1
  58              		.global	SystemClock_Config
  59              		.syntax unified
  60              		.thumb
  61              		.thumb_func
  63              	SystemClock_Config:
  64              	.LFB66:
 159:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
  65              		.loc 1 159 1 view -0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 80
  68              		@ frame_needed = 0, uses_anonymous_args = 0
  69 0000 00B5     		push	{lr}
  70              		.cfi_def_cfa_offset 4
  71              		.cfi_offset 14, -4
  72 0002 95B0     		sub	sp, sp, #84
  73              		.cfi_def_cfa_offset 88
 160:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  74              		.loc 1 160 3 view .LVU8
 160:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
  75              		.loc 1 160 22 is_stmt 0 view .LVU9
  76 0004 2822     		movs	r2, #40
  77 0006 0021     		movs	r1, #0
  78 0008 0DEB0200 		add	r0, sp, r2
  79 000c FFF7FEFF 		bl	memset
  80              	.LVL0:
 161:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  81              		.loc 1 161 3 is_stmt 1 view .LVU10
 161:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
  82              		.loc 1 161 22 is_stmt 0 view .LVU11
  83 0010 0023     		movs	r3, #0
  84 0012 0593     		str	r3, [sp, #20]
  85 0014 0693     		str	r3, [sp, #24]
  86 0016 0793     		str	r3, [sp, #28]
  87 0018 0893     		str	r3, [sp, #32]
  88 001a 0993     		str	r3, [sp, #36]
 162:Core/Src/main.c **** 
  89              		.loc 1 162 3 is_stmt 1 view .LVU12
 162:Core/Src/main.c **** 
  90              		.loc 1 162 28 is_stmt 0 view .LVU13
  91 001c 0193     		str	r3, [sp, #4]
  92 001e 0293     		str	r3, [sp, #8]
  93 0020 0393     		str	r3, [sp, #12]
  94 0022 0493     		str	r3, [sp, #16]
ARM GAS  /tmp/ccj4zY0r.s 			page 9


 167:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  95              		.loc 1 167 3 is_stmt 1 view .LVU14
 167:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
  96              		.loc 1 167 36 is_stmt 0 view .LVU15
  97 0024 0122     		movs	r2, #1
  98 0026 0A92     		str	r2, [sp, #40]
 168:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
  99              		.loc 1 168 3 is_stmt 1 view .LVU16
 168:Core/Src/main.c ****   RCC_OscInitStruct.HSEPredivValue = RCC_HSE_PREDIV_DIV1;
 100              		.loc 1 168 30 is_stmt 0 view .LVU17
 101 0028 4FF48033 		mov	r3, #65536
 102 002c 0B93     		str	r3, [sp, #44]
 169:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 103              		.loc 1 169 3 is_stmt 1 view .LVU18
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 104              		.loc 1 170 3 view .LVU19
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 105              		.loc 1 170 30 is_stmt 0 view .LVU20
 106 002e 0E92     		str	r2, [sp, #56]
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 107              		.loc 1 171 3 is_stmt 1 view .LVU21
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 108              		.loc 1 171 34 is_stmt 0 view .LVU22
 109 0030 0222     		movs	r2, #2
 110 0032 1192     		str	r2, [sp, #68]
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 111              		.loc 1 172 3 is_stmt 1 view .LVU23
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLMUL = RCC_PLL_MUL9;
 112              		.loc 1 172 35 is_stmt 0 view .LVU24
 113 0034 1293     		str	r3, [sp, #72]
 173:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 114              		.loc 1 173 3 is_stmt 1 view .LVU25
 173:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 115              		.loc 1 173 32 is_stmt 0 view .LVU26
 116 0036 4FF4E013 		mov	r3, #1835008
 117 003a 1393     		str	r3, [sp, #76]
 174:Core/Src/main.c ****   {
 118              		.loc 1 174 3 is_stmt 1 view .LVU27
 174:Core/Src/main.c ****   {
 119              		.loc 1 174 7 is_stmt 0 view .LVU28
 120 003c 0AA8     		add	r0, sp, #40
 121 003e FFF7FEFF 		bl	HAL_RCC_OscConfig
 122              	.LVL1:
 174:Core/Src/main.c ****   {
 123              		.loc 1 174 6 view .LVU29
 124 0042 C8B9     		cbnz	r0, .L8
 181:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 125              		.loc 1 181 3 is_stmt 1 view .LVU30
 181:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 126              		.loc 1 181 31 is_stmt 0 view .LVU31
 127 0044 0F23     		movs	r3, #15
 128 0046 0593     		str	r3, [sp, #20]
 183:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 129              		.loc 1 183 3 is_stmt 1 view .LVU32
 183:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 130              		.loc 1 183 34 is_stmt 0 view .LVU33
 131 0048 0221     		movs	r1, #2
ARM GAS  /tmp/ccj4zY0r.s 			page 10


 132 004a 0691     		str	r1, [sp, #24]
 184:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 133              		.loc 1 184 3 is_stmt 1 view .LVU34
 184:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 134              		.loc 1 184 35 is_stmt 0 view .LVU35
 135 004c 0023     		movs	r3, #0
 136 004e 0793     		str	r3, [sp, #28]
 185:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 137              		.loc 1 185 3 is_stmt 1 view .LVU36
 185:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 138              		.loc 1 185 36 is_stmt 0 view .LVU37
 139 0050 4FF4A062 		mov	r2, #1280
 140 0054 0892     		str	r2, [sp, #32]
 186:Core/Src/main.c **** 
 141              		.loc 1 186 3 is_stmt 1 view .LVU38
 186:Core/Src/main.c **** 
 142              		.loc 1 186 36 is_stmt 0 view .LVU39
 143 0056 0993     		str	r3, [sp, #36]
 188:Core/Src/main.c ****   {
 144              		.loc 1 188 3 is_stmt 1 view .LVU40
 188:Core/Src/main.c ****   {
 145              		.loc 1 188 7 is_stmt 0 view .LVU41
 146 0058 05A8     		add	r0, sp, #20
 147 005a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 148              	.LVL2:
 188:Core/Src/main.c ****   {
 149              		.loc 1 188 6 view .LVU42
 150 005e 68B9     		cbnz	r0, .L9
 192:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 151              		.loc 1 192 3 is_stmt 1 view .LVU43
 192:Core/Src/main.c ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV6;
 152              		.loc 1 192 38 is_stmt 0 view .LVU44
 153 0060 0223     		movs	r3, #2
 154 0062 0193     		str	r3, [sp, #4]
 193:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 155              		.loc 1 193 3 is_stmt 1 view .LVU45
 193:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 156              		.loc 1 193 35 is_stmt 0 view .LVU46
 157 0064 4FF40043 		mov	r3, #32768
 158 0068 0393     		str	r3, [sp, #12]
 194:Core/Src/main.c ****   {
 159              		.loc 1 194 3 is_stmt 1 view .LVU47
 194:Core/Src/main.c ****   {
 160              		.loc 1 194 7 is_stmt 0 view .LVU48
 161 006a 01A8     		add	r0, sp, #4
 162 006c FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 163              	.LVL3:
 194:Core/Src/main.c ****   {
 164              		.loc 1 194 6 view .LVU49
 165 0070 30B9     		cbnz	r0, .L10
 198:Core/Src/main.c **** 
 166              		.loc 1 198 1 view .LVU50
 167 0072 15B0     		add	sp, sp, #84
 168              		.cfi_remember_state
 169              		.cfi_def_cfa_offset 4
 170              		@ sp needed
 171 0074 5DF804FB 		ldr	pc, [sp], #4
ARM GAS  /tmp/ccj4zY0r.s 			page 11


 172              	.L8:
 173              		.cfi_restore_state
 176:Core/Src/main.c ****   }
 174              		.loc 1 176 5 is_stmt 1 view .LVU51
 175 0078 FFF7FEFF 		bl	Error_Handler
 176              	.LVL4:
 177              	.L9:
 190:Core/Src/main.c ****   }
 178              		.loc 1 190 5 view .LVU52
 179 007c FFF7FEFF 		bl	Error_Handler
 180              	.LVL5:
 181              	.L10:
 196:Core/Src/main.c ****   }
 182              		.loc 1 196 5 view .LVU53
 183 0080 FFF7FEFF 		bl	Error_Handler
 184              	.LVL6:
 185              		.cfi_endproc
 186              	.LFE66:
 188              		.section	.text.main,"ax",%progbits
 189              		.align	1
 190              		.global	main
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 195              	main:
 196              	.LFB65:
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 197              		.loc 1 72 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 1304
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201 0000 00B5     		push	{lr}
 202              		.cfi_def_cfa_offset 4
 203              		.cfi_offset 14, -4
 204 0002 ADF21C5D 		subw	sp, sp, #1308
 205              		.cfi_def_cfa_offset 1312
  80:Core/Src/main.c **** 
 206              		.loc 1 80 3 view .LVU55
 207 0006 FFF7FEFF 		bl	HAL_Init
 208              	.LVL7:
  87:Core/Src/main.c **** 
 209              		.loc 1 87 3 view .LVU56
 210 000a FFF7FEFF 		bl	SystemClock_Config
 211              	.LVL8:
  94:Core/Src/main.c ****   MX_ADC1_Init();
 212              		.loc 1 94 3 view .LVU57
 213 000e FFF7FEFF 		bl	MX_GPIO_Init
 214              	.LVL9:
  95:Core/Src/main.c ****   MX_USART1_UART_Init();
 215              		.loc 1 95 3 view .LVU58
 216 0012 FFF7FEFF 		bl	MX_ADC1_Init
 217              	.LVL10:
  96:Core/Src/main.c ****   MX_USART3_UART_Init();
 218              		.loc 1 96 3 view .LVU59
 219 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 220              	.LVL11:
  97:Core/Src/main.c ****   MX_SPI2_Init();
ARM GAS  /tmp/ccj4zY0r.s 			page 12


 221              		.loc 1 97 3 view .LVU60
 222 001a FFF7FEFF 		bl	MX_USART3_UART_Init
 223              	.LVL12:
  98:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 224              		.loc 1 98 3 view .LVU61
 225 001e FFF7FEFF 		bl	MX_SPI2_Init
 226              	.LVL13:
 101:Core/Src/main.c ****   struct menu_status menu_handle;
 227              		.loc 1 101 3 view .LVU62
 101:Core/Src/main.c ****   struct menu_status menu_handle;
 228              		.loc 1 101 11 is_stmt 0 view .LVU63
 229 0022 0023     		movs	r3, #0
 230 0024 ADF81435 		strh	r3, [sp, #1300]	@ movhi
 102:Core/Src/main.c ****   struct setup_data setup_handle;
 231              		.loc 1 102 3 is_stmt 1 view .LVU64
 103:Core/Src/main.c ****   struct comm_data comm_handle;
 232              		.loc 1 103 3 view .LVU65
 104:Core/Src/main.c **** 
 233              		.loc 1 104 3 view .LVU66
 107:Core/Src/main.c ****   initSetupData(&setup_handle);
 234              		.loc 1 107 3 view .LVU67
 235 0028 0DF5A260 		add	r0, sp, #1296
 236 002c FFF7FEFF 		bl	initMenu
 237              	.LVL14:
 108:Core/Src/main.c ****   initComms(&comm_handle);
 238              		.loc 1 108 3 view .LVU68
 239 0030 0DF20440 		addw	r0, sp, #1028
 240 0034 FFF7FEFF 		bl	initSetupData
 241              	.LVL15:
 109:Core/Src/main.c **** 
 242              		.loc 1 109 3 view .LVU69
 243 0038 6846     		mov	r0, sp
 244 003a FFF7FEFF 		bl	initComms
 245              	.LVL16:
 246              	.L14:
 115:Core/Src/main.c ****   {
 247              		.loc 1 115 3 view .LVU70
 118:Core/Src/main.c ****     //updates the meny screen
 248              		.loc 1 118 5 view .LVU71
 249 003e 0DF21450 		addw	r0, sp, #1300
 250 0042 FFF7FEFF 		bl	getJoypadVals
 251              	.LVL17:
 120:Core/Src/main.c ****     //performs function selected on the menu
 252              		.loc 1 120 5 view .LVU72
 253 0046 0DF21451 		addw	r1, sp, #1300
 254 004a 0DF5A260 		add	r0, sp, #1296
 255 004e FFF7FEFF 		bl	serveMenuScreen
 256              	.LVL18:
 122:Core/Src/main.c ****     //main loop when the machine is flashing parts
 257              		.loc 1 122 5 view .LVU73
 258 0052 0DF20442 		addw	r2, sp, #1028
 259 0056 0DF21451 		addw	r1, sp, #1300
 260 005a 0DF5A260 		add	r0, sp, #1296
 261 005e FFF7FEFF 		bl	serveMenuFunc
 262              	.LVL19:
 124:Core/Src/main.c ****       setup_handle.exec_status = Fail;
 263              		.loc 1 124 5 view .LVU74
ARM GAS  /tmp/ccj4zY0r.s 			page 13


 124:Core/Src/main.c ****       setup_handle.exec_status = Fail;
 264              		.loc 1 124 8 is_stmt 0 view .LVU75
 265 0062 6946     		mov	r1, sp
 266 0064 0DF20440 		addw	r0, sp, #1028
 267 0068 FFF7FEFF 		bl	parseInstruction
 268              	.LVL20:
 124:Core/Src/main.c ****       setup_handle.exec_status = Fail;
 269              		.loc 1 124 7 view .LVU76
 270 006c 0128     		cmp	r0, #1
 271 006e 08D0     		beq	.L18
 129:Core/Src/main.c ****       setup_handle.exec_status = Fail;
 272              		.loc 1 129 5 is_stmt 1 view .LVU77
 129:Core/Src/main.c ****       setup_handle.exec_status = Fail;
 273              		.loc 1 129 8 is_stmt 0 view .LVU78
 274 0070 6846     		mov	r0, sp
 275 0072 FFF7FEFF 		bl	serveCommunication
 276              	.LVL21:
 129:Core/Src/main.c ****       setup_handle.exec_status = Fail;
 277              		.loc 1 129 7 view .LVU79
 278 0076 0128     		cmp	r0, #1
 279 0078 E1D1     		bne	.L14
 130:Core/Src/main.c ****       break;
 280              		.loc 1 130 7 is_stmt 1 view .LVU80
 130:Core/Src/main.c ****       break;
 281              		.loc 1 130 32 is_stmt 0 view .LVU81
 282 007a 0523     		movs	r3, #5
 283 007c 8DF80434 		strb	r3, [sp, #1028]
 131:Core/Src/main.c ****     }
 284              		.loc 1 131 7 is_stmt 1 view .LVU82
 285 0080 02E0     		b	.L13
 286              	.L18:
 125:Core/Src/main.c ****       break;
 287              		.loc 1 125 7 view .LVU83
 125:Core/Src/main.c ****       break;
 288              		.loc 1 125 32 is_stmt 0 view .LVU84
 289 0082 0523     		movs	r3, #5
 290 0084 8DF80434 		strb	r3, [sp, #1028]
 126:Core/Src/main.c ****     }
 291              		.loc 1 126 7 is_stmt 1 view .LVU85
 292              	.L13:
 138:Core/Src/main.c ****       reportFail(&setup_handle, &comm_handle);
 293              		.loc 1 138 5 view .LVU86
 138:Core/Src/main.c ****       reportFail(&setup_handle, &comm_handle);
 294              		.loc 1 138 20 is_stmt 0 view .LVU87
 295 0088 9DF80434 		ldrb	r3, [sp, #1028]	@ zero_extendqisi2
 138:Core/Src/main.c ****       reportFail(&setup_handle, &comm_handle);
 296              		.loc 1 138 7 view .LVU88
 297 008c 052B     		cmp	r3, #5
 298 008e 04D0     		beq	.L19
 143:Core/Src/main.c **** 
 299              		.loc 1 143 14 is_stmt 1 view .LVU89
 152:Core/Src/main.c **** 
 300              		.loc 1 152 1 is_stmt 0 view .LVU90
 301 0090 0020     		movs	r0, #0
 302 0092 0DF21C5D 		addw	sp, sp, #1308
 303              		.cfi_remember_state
 304              		.cfi_def_cfa_offset 4
ARM GAS  /tmp/ccj4zY0r.s 			page 14


 305              		@ sp needed
 306 0096 5DF804FB 		ldr	pc, [sp], #4
 307              	.L19:
 308              		.cfi_restore_state
 139:Core/Src/main.c ****     
 309              		.loc 1 139 7 is_stmt 1 view .LVU91
 310 009a 6946     		mov	r1, sp
 311 009c 0DF20440 		addw	r0, sp, #1028
 312 00a0 FFF7FEFF 		bl	reportFail
 313              	.LVL22:
 314              	.L16:
 143:Core/Src/main.c **** 
 315              		.loc 1 143 5 discriminator 1 view .LVU92
 143:Core/Src/main.c **** 
 316              		.loc 1 143 13 discriminator 1 view .LVU93
 143:Core/Src/main.c **** 
 317              		.loc 1 143 5 discriminator 1 view .LVU94
 318 00a4 FEE7     		b	.L16
 319              		.cfi_endproc
 320              	.LFE65:
 322              		.text
 323              	.Letext0:
 324              		.file 3 "/usr/arm-none-eabi/include/machine/_default_types.h"
 325              		.file 4 "/usr/arm-none-eabi/include/sys/_stdint.h"
 326              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 327              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 328              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 329              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 330              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 331              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 332              		.file 11 "Core/Inc/main.h"
 333              		.file 12 "Core/Inc/menu.h"
 334              		.file 13 "Core/Inc/comm_interface.h"
 335              		.file 14 "Core/Inc/flash_execution.h"
 336              		.file 15 "Core/Inc/joypad.h"
 337              		.file 16 "Core/Inc/spi.h"
 338              		.file 17 "Core/Inc/usart.h"
 339              		.file 18 "Core/Inc/adc.h"
 340              		.file 19 "Core/Inc/gpio.h"
 341              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 342              		.file 21 "<built-in>"
ARM GAS  /tmp/ccj4zY0r.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccj4zY0r.s:19     .text.Error_Handler:0000000000000000 $t
     /tmp/ccj4zY0r.s:25     .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccj4zY0r.s:57     .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccj4zY0r.s:63     .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccj4zY0r.s:189    .text.main:0000000000000000 $t
     /tmp/ccj4zY0r.s:195    .text.main:0000000000000000 main

UNDEFINED SYMBOLS
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
MX_GPIO_Init
MX_ADC1_Init
MX_USART1_UART_Init
MX_USART3_UART_Init
MX_SPI2_Init
initMenu
initSetupData
initComms
getJoypadVals
serveMenuScreen
serveMenuFunc
parseInstruction
serveCommunication
reportFail
